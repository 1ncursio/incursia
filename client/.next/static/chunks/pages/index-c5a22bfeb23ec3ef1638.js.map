{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack://_N_E/./pages/index.tsx","webpack://_N_E/./components/PostCard.tsx"],"names":["window","__NEXT_P","push","DividerHeader","styled","div","Home","userData","useSWR","fetcher","data","postsData","followingsPostsData","status","justify","gutter","span","map","post","id","TitleWrapper","CoverImage","img","Text","Typography","PostCard","avatarVisible","href","alt","title","src","Images","strong","User","marginRight"],"mappings":"+FACOA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,IACA,WACE,OAAO,EAAQ,Y,uKCSnBC,EAAgBC,IAAOC,IAAV,uEAAGD,CAAH,2FAgEJE,UAtDF,WAAM,IAGHC,EAAaC,YAAc,YAAaC,KAA9CC,KACMC,EAAcH,YAAgB,sBAAuBC,KAA3DC,KACME,EAAwBJ,YAAgBD,EAAW,kCAAoC,KAAME,KAAnGC,KAER,MAAyB,aAAb,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUM,QACL,cAAC,IAAD,IAIP,eAAC,IAAD,WACE,cAACV,EAAD,UACE,cAAC,IAAD,CAAKW,QAAQ,SAASC,OAAQ,GAA9B,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,iEAIN,cAAC,IAAD,CAAKF,QAAQ,SAASC,OAAQ,GAA9B,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CAAKD,OAAQ,CAAC,EAAG,GAAjB,gBACGJ,QADH,IACGA,OADH,EACGA,EAAWM,KAAI,SAACC,GAAD,OACd,cAAC,IAAD,CAAKF,KAAM,EAAX,SACE,cAAC,IAAD,CAAwBE,KAAMA,GAAfA,EAAKC,KADHD,EAAKC,aAOhC,cAAChB,EAAD,UACE,cAAC,IAAD,CAAKW,QAAQ,SAASC,OAAQ,GAA9B,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sGAIN,cAAC,IAAD,CAAKF,QAAQ,SAASC,OAAQ,GAA9B,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CAAKD,OAAQ,CAAC,EAAG,GAAjB,SACGR,IAAQ,OACPK,QADO,IACPA,OADO,EACPA,EAAqBK,KAAI,SAACC,GAAD,OACvB,cAAC,IAAD,CAAKF,KAAM,EAAX,SACE,cAAC,IAAD,CAAwBE,KAAMA,GAAfA,EAAKC,KADHD,EAAKC,mB,uHC3DlCC,EAAehB,IAAOC,IAAV,4EAAGD,CAAH,wBAIZiB,EAAajB,IAAOkB,IAAV,0EAAGlB,CAAH,sGAYRmB,EAASC,IAATD,KAiCOE,IA1BE,SAAC,GAA0C,IAAxCP,EAAwC,EAAxCA,KAAwC,IAAlCQ,qBAAkC,SAC1D,OACE,qCACE,cAAC,IAAD,CAAMC,KAAI,wBAAmBT,EAAKC,IAAlC,SACE,4BACE,cAACE,EAAD,CAAYO,IAAKV,EAAKW,MAAOC,IAAG,gCAA2BZ,EAAKa,OAAO,GAAGD,WAG9E,cAACV,EAAD,UACE,cAAC,IAAD,CAAMO,KAAI,wBAAmBT,EAAKC,IAAlC,SACE,4BACE,cAACI,EAAD,CAAMS,QAAM,EAAZ,SAAcd,EAAKW,cAIxBH,GACC,cAAC,IAAD,CAAMC,KAAI,gBAAWT,EAAKe,KAAKd,GAArB,iBAAV,SACE,4BACE,cAAC,IAAD,CAAYZ,SAAUW,EAAKe,KAAMC,YAAa,c","file":"static/chunks/pages/index-c5a22bfeb23ec3ef1638.js","sourcesContent":["\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/\",\n        function () {\n          return require(\"private-next-pages/index.tsx\");\n        }\n      ]);\n    ","import React from 'react';\r\n// @ts-ignore\r\n// import { useSelector } from 'react-redux';\r\nimport { Row, Col } from 'antd';\r\nimport useSWR from 'swr';\r\nimport styled from 'styled-components';\r\nimport { IPost } from '@typings/IPost';\r\nimport { IUser } from '@typings/IUser';\r\nimport AppLayout from '@components/AppLayout';\r\nimport PostCard from '@components/PostCard';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport ExpiredValidation from '@components/ExpiredValidation';\r\n\r\nconst DividerHeader = styled.div`\r\n  height: 80px;\r\n  line-height: 80px;\r\n  margin-bottom: 10px;\r\n  background: #495057;\r\n  h1 {\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst Home = () => {\r\n  // const { hasMorePosts } = useSelector((state: any) => state.post);\r\n\r\n  const { data: userData } = useSWR<IUser>('/api/user', fetcher);\r\n  const { data: postsData } = useSWR<IPost[]>('/api/posts?lastId=0', fetcher);\r\n  const { data: followingsPostsData } = useSWR<IPost[]>(userData ? '/api/posts/followings/?lastId=0' : null, fetcher);\r\n\r\n  if (userData?.status === 'pending') {\r\n    return <ExpiredValidation />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <DividerHeader>\r\n        <Row justify=\"center\" gutter={16}>\r\n          <Col span={18}>\r\n            <h1>전체 작품</h1>\r\n          </Col>\r\n        </Row>\r\n      </DividerHeader>\r\n      <Row justify=\"center\" gutter={16}>\r\n        <Col span={18}>\r\n          <Row gutter={[8, 8]}>\r\n            {postsData?.map((post) => (\r\n              <Col span={4} key={post.id}>\r\n                <PostCard key={post.id} post={post} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <DividerHeader>\r\n        <Row justify=\"center\" gutter={16}>\r\n          <Col span={18}>\r\n            <h1>팔로우하는 유저의 작품</h1>\r\n          </Col>\r\n        </Row>\r\n      </DividerHeader>\r\n      <Row justify=\"center\" gutter={16}>\r\n        <Col span={18}>\r\n          <Row gutter={[8, 8]}>\r\n            {userData &&\r\n              followingsPostsData?.map((post) => (\r\n                <Col span={4} key={post.id}>\r\n                  <PostCard key={post.id} post={post} />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport { IPost } from '@typings/IPost';\r\nimport UserAvatar from '@components/UserAvatar';\r\n\r\nconst TitleWrapper = styled.div`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n  width: 100%;\r\n  height: 140px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface Props {\r\n  post: IPost;\r\n  avatarVisible?: boolean;\r\n}\r\n\r\nconst PostCard = ({ post, avatarVisible = true }: Props) => {\r\n  return (\r\n    <>\r\n      <Link href={`/illustration/${post.id}`}>\r\n        <a>\r\n          <CoverImage alt={post.title} src={`http://localhost:3100/${post.Images[0].src}`} />\r\n        </a>\r\n      </Link>\r\n      <TitleWrapper>\r\n        <Link href={`/illustration/${post.id}`}>\r\n          <a>\r\n            <Text strong>{post.title}</Text>\r\n          </a>\r\n        </Link>\r\n      </TitleWrapper>\r\n      {avatarVisible && (\r\n        <Link href={`/user/${post.User.id}/illustration`}>\r\n          <a>\r\n            <UserAvatar userData={post.User} marginRight={4} />\r\n          </a>\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n"],"sourceRoot":""}