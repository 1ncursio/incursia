{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?74ca","webpack://_N_E/./components/NoticeSection/index.tsx","webpack://_N_E/./pages/notices/.tsx"],"names":["window","__NEXT_P","push","dayjs","extend","relativeTime","Title","Typography","Paragraph","NoticeSection","id","useRouter","query","useState","liked","setLiked","userData","useSWR","fetcher","data","noticeData","onLike","useCallback","prev","alert","onDislike","onClickDelete","level","title","caption","createdAt","format","fromNow","style","float","HeartFilled","fontSize","opacity","onClick","HeartOutlined","ShareAltOutlined","AlertOutlined","User","DeleteOutlined","NoticePage","noticeMutate","mutate","useEffect","console","log","status","ExpiredValidation","AppLayout","nickname","name","content","Images","src","justify","gutter","span","CommentSection","postData","postMutate"],"mappings":"6FACOA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,gBACA,WACE,OAAO,EAAQ,Y,wTCKzBC,IAAMC,OAAOC,K,IAELC,EAAqBC,IAArBD,MAAOE,EAAcD,IAAdC,UA6DAC,EA3DO,WACpB,IACQC,EADOC,sBACOC,MAAdF,GAFkB,EAIAG,oBAAS,GAA5BC,EAJmB,KAIZC,EAJY,KAMZC,EAAaC,YAAO,YAAaC,KAAvCC,KACMC,EAAeH,YAAOP,EAAK,oBAAH,OAAuBA,GAAO,KAAMQ,KAAlEC,KAEFE,EAASC,uBAAY,WACzB,OAAKN,EAIED,GAAS,SAACQ,GAAD,OAAWA,KAHlBC,MAAM,8DAId,CAACR,EAAD,OAAWI,QAAX,IAAWA,OAAX,EAAWA,EAAYV,KAEpBe,EAAYH,uBAAY,WAC5B,OAAKN,EAIED,GAAS,SAACQ,GAAD,OAAWA,KAHlBC,MAAM,8DAId,CAACR,EAAD,OAAWI,QAAX,IAAWA,OAAX,EAAWA,EAAYV,KAEpBgB,EAAgBJ,uBAAY,cAAU,IAE5C,OACE,qCACE,cAAChB,EAAD,CAAOqB,MAAO,EAAd,gBAAkBP,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAYQ,QAC9B,cAACpB,EAAD,iBAAYY,QAAZ,IAAYA,OAAZ,EAAYA,EAAYS,UACxB,cAAC,IAAD,CAASD,MAAOzB,IAAK,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAYU,WAAWC,OAAO,sCAApD,SACE,+BAAO5B,IAAK,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAYU,WAAWE,cAEtC,eAAC,IAAD,CAAOC,MAAO,CAAEC,MAAO,SAAvB,UACE,cAAC,IAAD,CAASN,MAAM,sBAAf,SACGd,EACC,cAACqB,EAAA,EAAD,CAAaF,MAAO,CAAEG,SAAU,GAAIC,QAAS,IAAOC,QAASb,IAE7D,cAACc,EAAA,EAAD,CAAeN,MAAO,CAAEG,SAAU,GAAIC,QAAS,IAAOC,QAASjB,MAGnE,cAAC,IAAD,CAASO,MAAM,4BAAf,SACE,cAACY,EAAA,EAAD,CAAkBP,MAAO,CAAEG,SAAU,GAAIC,QAAS,QAEpD,cAAC,IAAD,CAAST,MAAM,2BAAf,SACE,cAACa,EAAA,EAAD,CAAeR,MAAO,CAAEG,SAAU,GAAIC,QAAS,SAGxC,OAARrB,QAAQ,IAARA,OAAA,EAAAA,EAAUN,OAAV,OAAiBU,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAYsB,KAAKhC,KACjC,cAAC,IAAD,CAASkB,MAAM,2BAAf,SACE,cAACe,EAAA,EAAD,CAAgBV,MAAO,CAAEG,SAAU,IAAME,QAASZ,a,YCX/CkB,UAzCI,WACjB,IACQlC,EADOC,sBACOC,MAAdF,GAEMM,EAAaC,YAAc,YAAaC,KAA9CC,KAJe,EAK4BF,YAAOP,EAAK,oBAAH,OAAuBA,GAAO,KAAMQ,KAAlFE,EALS,EAKfD,KAA0B0B,EALX,EAKGC,OAM1B,OAJAC,qBAAU,WACJ3B,GAAY4B,QAAQC,IAAI7B,KAC3B,CAACA,IAEqB,aAAb,OAARJ,QAAQ,IAARA,OAAA,EAAAA,EAAUkC,QACL,cAACC,EAAA,EAAD,IAIP,eAACC,EAAA,EAAD,WACGhC,GACC,eAAC,IAAD,WACE,kCAAQA,EAAWsB,KAAKW,SAAxB,sEACA,sBAAMC,KAAK,cAAcC,QAASnC,EAAWS,UAC7C,sBAAMyB,KAAK,WAAWC,QAAO,UAAKnC,EAAWsB,KAAKW,SAArB,2CAC7B,sBAAMC,KAAK,iBAAiBC,QAASnC,EAAWS,UAChD,sBACEyB,KAAK,WACLC,QAASnC,EAAWoC,OAAO,GAAKpC,EAAWoC,OAAO,GAAGC,IAAM,qCAE7D,sBAAMH,KAAK,SAASC,QAAO,oCAA+B7C,QAG9D,eAAC,IAAD,CAAKgD,QAAQ,SAASC,OAAQ,GAA9B,UACE,eAAC,IAAD,CAAKC,KAAM,GAAX,UACE,cAAC,EAAD,IACCxC,GAAc,cAACyC,EAAA,EAAD,CAAgBC,SAAU1C,EAAY2C,WAAYlB,OAEnE,cAAC,IAAD,CAAKe,KAAM,a","file":"static/chunks/pages/notices/[id]-5eeb073917f4502605ec.js","sourcesContent":["\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/notices/[id]\",\n        function () {\n          return require(\"private-next-pages/notices/[id].tsx\");\n        }\n      ]);\n    ","import React, { useCallback, useState } from 'react';\r\nimport useSWR from 'swr';\r\nimport { useRouter } from 'next/router';\r\nimport { Space, Tooltip, Typography } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { AlertOutlined, DeleteOutlined, HeartFilled, HeartOutlined, ShareAltOutlined } from '@ant-design/icons';\r\nimport { fetcher } from '@utils/fetcher';\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst NoticeSection = () => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const { data: userData } = useSWR('/api/user', fetcher);\r\n  const { data: noticeData } = useSWR(id ? `/api/post/notice/${id}` : null, fetcher);\r\n\r\n  const onLike = useCallback(() => {\r\n    if (!userData) {\r\n      return alert('로그인이 필요합니다.');\r\n    }\r\n    // dispatch({ type: LIKE_POST_REQUEST, data: noticeData.id });\r\n    return setLiked((prev) => !prev);\r\n  }, [userData, noticeData?.id]);\r\n\r\n  const onDislike = useCallback(() => {\r\n    if (!userData) {\r\n      return alert('로그인이 필요합니다.');\r\n    }\r\n    // dispatch({ type: DISLIKE_POST_REQUEST, data: noticeData.id });\r\n    return setLiked((prev) => !prev);\r\n  }, [userData, noticeData?.id]);\r\n\r\n  const onClickDelete = useCallback(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <Title level={3}>{noticeData?.title}</Title>\r\n      <Paragraph>{noticeData?.caption}</Paragraph>\r\n      <Tooltip title={dayjs(noticeData?.createdAt).format('YYYY년 MM월 DD일 HH:mm')}>\r\n        <span>{dayjs(noticeData?.createdAt).fromNow()}</span>\r\n      </Tooltip>\r\n      <Space style={{ float: 'right' }}>\r\n        <Tooltip title=\"좋아요!\">\r\n          {liked ? (\r\n            <HeartFilled style={{ fontSize: 24, opacity: 0.9 }} onClick={onDislike} />\r\n          ) : (\r\n            <HeartOutlined style={{ fontSize: 24, opacity: 0.9 }} onClick={onLike} />\r\n          )}\r\n        </Tooltip>\r\n        <Tooltip title=\"공유하기!\">\r\n          <ShareAltOutlined style={{ fontSize: 24, opacity: 0.9 }} />\r\n        </Tooltip>\r\n        <Tooltip title=\"신고하기\">\r\n          <AlertOutlined style={{ fontSize: 24, opacity: 0.9 }} />\r\n        </Tooltip>\r\n\r\n        {userData?.id === noticeData?.User.id && (\r\n          <Tooltip title=\"삭제하기\">\r\n            <DeleteOutlined style={{ fontSize: 24 }} onClick={onClickDelete} />\r\n          </Tooltip>\r\n        )}\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoticeSection;\r\n","import { Col, Row } from 'antd';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useEffect } from 'react';\r\nimport useSWR from 'swr';\r\nimport AppLayout from '@components/AppLayout';\r\nimport CommentSection from '@components/CommentSection';\r\nimport NoticeSection from '@components/NoticeSection';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport { IUser } from '@typings/IUser';\r\nimport ExpiredValidation from '@components/ExpiredValidation';\r\n\r\nconst NoticePage = () => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  const { data: userData } = useSWR<IUser>('/api/user', fetcher);\r\n  const { data: noticeData, mutate: noticeMutate } = useSWR(id ? `/api/post/notice/${id}` : null, fetcher);\r\n\r\n  useEffect(() => {\r\n    if (noticeData) console.log(noticeData);\r\n  }, [noticeData]);\r\n\r\n  if (userData?.status === 'pending') {\r\n    return <ExpiredValidation />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      {noticeData && (\r\n        <Head>\r\n          <title>{noticeData.User.nickname}님의 일러스트 - 유토피아</title>\r\n          <meta name=\"description\" content={noticeData.caption} />\r\n          <meta name=\"og:title\" content={`${noticeData.User.nickname}님의 일러스트`} />\r\n          <meta name=\"og:description\" content={noticeData.caption} />\r\n          <meta\r\n            name=\"og:image\"\r\n            content={noticeData.Images[0] ? noticeData.Images[0].src : 'https://nodebird.com/favicon.ico'}\r\n          />\r\n          <meta name=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n        </Head>\r\n      )}\r\n      <Row justify=\"center\" gutter={16}>\r\n        <Col span={12}>\r\n          <NoticeSection />\r\n          {noticeData && <CommentSection postData={noticeData} postMutate={noticeMutate} />}\r\n        </Col>\r\n        <Col span={4}>{/* <UserProfile postData={postData} /> */}</Col>\r\n      </Row>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default NoticePage;\r\n"],"sourceRoot":""}