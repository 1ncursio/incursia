{"version":3,"sources":["webpack://_N_E/./components/UserPageMenu.tsx","webpack://_N_E/./pages/user//illustration.tsx","webpack://_N_E/./components/UserPageProfile.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?1c93","webpack://_N_E/./components/PostCard.tsx","webpack://_N_E/./pages/user//style.tsx"],"names":["UserPageMenu","current","userId","mode","selectedKeys","Item","href","UserIllustration","initialUser","user","initialPosts","posts","id","useRouter","query","userData","useSWR","fetcher","initialData","data","postsData","status","justify","gutter","span","parseInt","length","map","post","xs","md","avatarVisible","UserIntro","styled","Typography","Paragraph","UserPageProfile","marginRight","size","type","introduction","window","__NEXT_P","push","TitleWrapper","div","CoverImage","img","Text","PostCard","alt","title","src","Images","strong","User","MenuHeaderWrapper","MenuHeader"],"mappings":"wKA+BeA,IAtBM,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,OAC/B,OACE,eAAC,IAAD,CAAMC,KAAK,aAAaC,aAAc,CAACH,GAAvC,UACE,cAAC,IAAKI,KAAN,UACE,cAAC,IAAD,CAAMC,KAAI,gBAAWJ,EAAX,iBAAV,SACE,4DAFW,gBAKf,cAAC,IAAKG,KAAN,UACE,cAAC,IAAD,CAAMC,KAAI,gBAAWJ,EAAX,eAAV,SACE,sDAFW,cAKf,cAAC,IAAKG,KAAN,UACE,cAAC,IAAD,CAAMC,KAAI,gBAAWJ,EAAX,cAAV,SACE,sDAFW,kB,wPCuCNK,UAzCU,SAAC,GAAsD,IAA9CC,EAA8C,EAApDC,KAA0BC,EAA0B,EAAjCC,MAGrCC,EAFOC,sBAEwBC,MAA/BF,GAEMG,EAAaC,YAAO,aAAD,OAAcJ,EAAd,aAA6BK,IAAS,CAAEC,YAAaV,IAA9EW,KAEMC,EAAcJ,YAAO,aAAD,OAAcJ,EAAd,UAA0BK,IAAS,CAAEC,YAAaR,IAA5ES,KAER,MAAyB,aAAb,OAARJ,QAAQ,IAARA,OAAA,EAAAA,EAAUM,QACL,cAAC,IAAD,IAIP,cAAC,IAAD,UACE,cAAC,IAAD,CAAKC,QAAQ,SAASC,OAAQ,GAA9B,SACE,eAAC,IAAD,CAAKC,KAAM,GAAX,UACE,cAAC,IAAD,CAAiBT,SAAUA,IAC1BH,GAAM,cAAC,IAAD,CAAcX,QAAQ,eAAeC,OAAQuB,SAASb,EAAI,MACjE,cAAC,oBAAD,UACE,cAAC,aAAD,oBAAgBQ,EAAUM,OAA1B,6CAEF,cAAC,IAAD,CAAKH,OAAQ,CAAC,EAAG,GAAjB,gBACGH,QADH,IACGA,OADH,EACGA,EAAWO,KAAI,SAACC,GAAD,OACd,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,cAAC,IAAD,CAAwBF,KAAMA,EAAMG,eAAe,GAApCH,EAAKhB,KADGgB,EAAKhB,kB,kGCtCtCoB,EAAYC,YAAOC,IAAWC,WAArB,iFAAGF,CAAH,yCAkBAG,IATS,SAAC,GAAwB,IAAtBrB,EAAsB,EAAtBA,SACzB,OACE,qCACE,cAAC,IAAD,CAAYA,SAAUA,EAAUsB,YAAa,EAAGC,KAAM,IAAKC,KAAK,UAChE,cAACP,EAAD,UAAYjB,EAASyB,oB,sBClBpBC,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,0BACA,WACE,OAAO,EAAQ,Y,uHCGnBC,EAAeX,IAAOY,IAAV,4EAAGZ,CAAH,wBAIZa,EAAab,IAAOc,IAAV,0EAAGd,CAAH,sGAYRe,EAASd,IAATc,KAiCOC,IA1BE,SAAC,GAA0C,IAAxCrB,EAAwC,EAAxCA,KAAwC,IAAlCG,qBAAkC,SAC1D,OACE,qCACE,cAAC,IAAD,CAAMzB,KAAI,wBAAmBsB,EAAKhB,IAAlC,SACE,4BACE,cAACkC,EAAD,CAAYI,IAAKtB,EAAKuB,MAAOC,IAAG,gCAA2BxB,EAAKyB,OAAO,GAAGD,WAG9E,cAACR,EAAD,UACE,cAAC,IAAD,CAAMtC,KAAI,wBAAmBsB,EAAKhB,IAAlC,SACE,4BACE,cAACoC,EAAD,CAAMM,QAAM,EAAZ,SAAc1B,EAAKuB,cAIxBpB,GACC,cAAC,IAAD,CAAMzB,KAAI,gBAAWsB,EAAK2B,KAAK3C,GAArB,iBAAV,SACE,4BACE,cAAC,IAAD,CAAYG,SAAUa,EAAK2B,KAAMlB,YAAa,a,kCChD1D,oHAGQW,EAHR,UAGiBd,EAATc,KAEKQ,EAAoBvB,IAAOY,IAAV,8EAAGZ,CAAH,oBAIjBwB,EAAaxB,YAAOe,GAAV,uEAAGf,CAAH,uBAIRwB,c","file":"static/chunks/pages/user/[id]/illustration-dbe8411dd2c3e4caa07d.js","sourcesContent":["import React from 'react';\r\nimport { Menu } from 'antd';\r\nimport Link from 'next/link';\r\n\r\ninterface Props {\r\n  current: string;\r\n  userId: number;\r\n}\r\n\r\nconst UserPageMenu = ({ current, userId }: Props) => {\r\n  return (\r\n    <Menu mode=\"horizontal\" selectedKeys={[current]}>\r\n      <Menu.Item key=\"illustration\">\r\n        <Link href={`/user/${userId}/illustration`}>\r\n          <a>일러스트</a>\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"followings\">\r\n        <Link href={`/user/${userId}/followings`}>\r\n          <a>팔로잉</a>\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"followers\">\r\n        <Link href={`/user/${userId}/followers`}>\r\n          <a>팔로워</a>\r\n        </Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default UserPageMenu;\r\n","import React from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport { useRouter } from 'next/router';\r\nimport AppLayout from '@components/AppLayout';\r\nimport useSWR from 'swr';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport PostCard from '@components/PostCard';\r\nimport UserPageMenu from '@components/UserPageMenu';\r\nimport UserPageProfile from '@components/UserPageProfile';\r\nimport { IUser } from '@typings/IUser';\r\nimport { IPost } from '@typings/IPost';\r\nimport ExpiredValidation from '@components/ExpiredValidation';\r\nimport { MenuHeaderWrapper, MenuHeader } from '@pages/user/[id]/style';\r\nimport wrapper from '../../../store/configureStore';\r\n\r\ninterface Props {\r\n  user: IUser;\r\n  posts: IPost[];\r\n}\r\n\r\nconst UserIllustration = ({ user: initialUser, posts: initialPosts }: Props) => {\r\n  const router = useRouter();\r\n\r\n  const { id }: { id?: string } = router.query;\r\n\r\n  const { data: userData } = useSWR(`/api/user/${id}?lastId=0`, fetcher, { initialData: initialUser });\r\n\r\n  const { data: postsData } = useSWR(`/api/user/${id}/posts`, fetcher, { initialData: initialPosts });\r\n\r\n  if (userData?.status === 'pending') {\r\n    return <ExpiredValidation />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Row justify=\"center\" gutter={16}>\r\n        <Col span={18}>\r\n          <UserPageProfile userData={userData} />\r\n          {id && <UserPageMenu current=\"illustration\" userId={parseInt(id, 10)} />}\r\n          <MenuHeaderWrapper>\r\n            <MenuHeader>{`${postsData.length}개의 일러스트`}</MenuHeader>\r\n          </MenuHeaderWrapper>\r\n          <Row gutter={[8, 8]}>\r\n            {postsData?.map((post: IPost) => (\r\n              <Col xs={24} md={4} key={post.id}>\r\n                <PostCard key={post.id} post={post} avatarVisible={false} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const user = await fetcher(`/api/user/${context.params?.id}?lastId=0`);\r\n  const posts = await fetcher(`/api/user/${context.params?.id}/posts`);\r\n  return { props: { user, posts } };\r\n});\r\n\r\nexport default UserIllustration;\r\n","import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport styled from 'styled-components';\r\nimport UserAvatar from '@components/UserAvatar';\r\nimport { IUser } from '@typings/IUser';\r\n\r\nconst UserIntro = styled(Typography.Paragraph)`\r\n  padding-top: 20px;\r\n  padding-left: 40px;\r\n`;\r\n\r\ninterface Props {\r\n  userData: IUser;\r\n}\r\n\r\nconst UserPageProfile = ({ userData }: Props) => {\r\n  return (\r\n    <>\r\n      <UserAvatar userData={userData} marginRight={8} size={100} type=\"title\" />\r\n      <UserIntro>{userData.introduction}</UserIntro>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPageProfile;\r\n","\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/user/[id]/illustration\",\n        function () {\n          return require(\"private-next-pages/user/[id]/illustration.tsx\");\n        }\n      ]);\n    ","import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport { IPost } from '@typings/IPost';\r\nimport UserAvatar from '@components/UserAvatar';\r\n\r\nconst TitleWrapper = styled.div`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n  width: 100%;\r\n  height: 140px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface Props {\r\n  post: IPost;\r\n  avatarVisible?: boolean;\r\n}\r\n\r\nconst PostCard = ({ post, avatarVisible = true }: Props) => {\r\n  return (\r\n    <>\r\n      <Link href={`/illustration/${post.id}`}>\r\n        <a>\r\n          <CoverImage alt={post.title} src={`http://localhost:3100/${post.Images[0].src}`} />\r\n        </a>\r\n      </Link>\r\n      <TitleWrapper>\r\n        <Link href={`/illustration/${post.id}`}>\r\n          <a>\r\n            <Text strong>{post.title}</Text>\r\n          </a>\r\n        </Link>\r\n      </TitleWrapper>\r\n      {avatarVisible && (\r\n        <Link href={`/user/${post.User.id}/illustration`}>\r\n          <a>\r\n            <UserAvatar userData={post.User} marginRight={4} />\r\n          </a>\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import styled from 'styled-components';\r\nimport { Typography } from 'antd';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport const MenuHeaderWrapper = styled.div`\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const MenuHeader = styled(Text)`\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nexport default MenuHeader;\r\n"],"sourceRoot":""}