{"ast":null,"code":"import { useState, useCallback } from 'react';\n\nconst useInput = initialState => {\n  const {\n    0: State,\n    1: setState\n  } = useState(initialState);\n  const handler = useCallback(e => {\n    setState(e.target.value);\n  }, []);\n  return [State, handler, setState];\n};\n\nexport default useInput;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/hooks/useInput.ts"],"names":["useState","useCallback","useInput","initialState","State","setState","handler","e","target","value"],"mappings":"AAAA,SAAmCA,QAAnC,EAA6CC,WAA7C,QAAgE,OAAhE;;AAKA,MAAMC,QAAQ,GAAaC,YAAV,IAA8C;AAC7D,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAACG,YAAD,CAAlC;AACA,QAAMG,OAAO,GAAGL,WAAW,CAAEM,CAAD,IAAO;AACjCF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAGA,SAAO,CAACL,KAAD,EAAQE,OAAR,EAAiBD,QAAjB,CAAP;AACD,CAND;;AAQA,eAAeH,QAAf","sourcesContent":["import { Dispatch, SetStateAction, useState, useCallback } from 'react';\r\n\r\ntype Handler = (e: any) => void;\r\ntype ReturnTypes<T = any> = [T, Handler, Dispatch<SetStateAction<T>>];\r\n\r\nconst useInput = <T = any>(initialState: T): ReturnTypes<T> => {\r\n  const [State, setState] = useState(initialState);\r\n  const handler = useCallback((e) => {\r\n    setState(e.target.value);\r\n  }, []);\r\n  return [State, handler, setState];\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}