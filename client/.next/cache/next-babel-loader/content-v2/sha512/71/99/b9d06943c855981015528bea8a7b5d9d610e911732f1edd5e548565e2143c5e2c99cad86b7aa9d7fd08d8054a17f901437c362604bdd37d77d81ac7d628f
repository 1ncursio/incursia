{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport { Row, Col, Avatar } from 'antd';\nimport useSWR from 'swr';\nimport { fetcher } from '@utils/fetcher';\nimport ExpiredValidation from '@components/ExpiredValidation';\nimport AppLayout from '@components/AppLayout';\n\nvar UserPage = function UserPage(_ref) {\n  var initialUserData = _ref.user;\n\n  var _useSWR = useSWR('/api/user', fetcher, {\n    initialData: initialUserData\n  }),\n      userData = _useSWR.data;\n\n  useEffect(function () {\n    console.log(userData);\n  }, []);\n\n  if ((userData === null || userData === void 0 ? void 0 : userData.status) === 'pending') {\n    return /*#__PURE__*/_jsx(ExpiredValidation, {});\n  }\n\n  return /*#__PURE__*/_jsx(AppLayout, {\n    children: /*#__PURE__*/_jsx(Row, {\n      justify: \"center\",\n      gutter: 16,\n      children: /*#__PURE__*/_jsx(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsx(Avatar, {\n          src: userData !== null && userData !== void 0 && userData.profile ? \"http://localhost:3100/\".concat(userData === null || userData === void 0 ? void 0 : userData.profile) : null,\n          size: 64,\n          children: userData !== null && userData !== void 0 && userData.profile ? null : userData === null || userData === void 0 ? void 0 : userData.nickname[0]\n        })\n      })\n    })\n  });\n};\n\nexport var __N_SSP = true;\nexport default UserPage;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/pages/user/[id].tsx"],"names":["React","useEffect","Row","Col","Avatar","useSWR","fetcher","ExpiredValidation","AppLayout","UserPage","initialUserData","user","initialData","userData","data","console","log","status","profile","nickname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,QAAiC,MAAjC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAQA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAsC;AAAA,MAA7BC,eAA6B,QAAnCC,IAAmC;;AAAA,gBAC1BN,MAAM,CAAC,WAAD,EAAcC,OAAd,EAAuB;AAAEM,IAAAA,WAAW,EAAEF;AAAf,GAAvB,CADoB;AAAA,MACvCG,QADuC,WAC7CC,IAD6C;;AAGrDb,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,MAAV,MAAqB,SAAzB,EAAoC;AAClC,wBAAO,KAAC,iBAAD,KAAP;AACD;;AAED,sBACE,KAAC,SAAD;AAAA,2BACE,KAAC,GAAD;AAAK,MAAA,OAAO,EAAC,QAAb;AAAsB,MAAA,MAAM,EAAE,EAA9B;AAAA,6BACE,KAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACE,KAAC,MAAD;AAAQ,UAAA,GAAG,EAAEJ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,IAAAA,QAAQ,CAAEK,OAAV,mCAA6CL,QAA7C,aAA6CA,QAA7C,uBAA6CA,QAAQ,CAAEK,OAAvD,IAAmE,IAAhF;AAAsF,UAAA,IAAI,EAAE,EAA5F;AAAA,oBACGL,QAAQ,SAAR,IAAAA,QAAQ,WAAR,IAAAA,QAAQ,CAAEK,OAAV,GAAoB,IAApB,GAA2BL,QAA3B,aAA2BA,QAA3B,uBAA2BA,QAAQ,CAAEM,QAAV,CAAmB,CAAnB;AAD9B;AADF;AADF;AADF,IADF;AAWD,CAtBD;;;AA6BA,eAAeV,QAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Row, Col, Avatar } from 'antd';\r\nimport useSWR from 'swr';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport ExpiredValidation from '@components/ExpiredValidation';\r\nimport AppLayout from '@components/AppLayout';\r\nimport { IUser } from '@typings/IUser';\r\nimport wrapper from '../../store/configureStore';\r\n\r\ninterface Props {\r\n  user: IUser;\r\n}\r\n\r\nconst UserPage = ({ user: initialUserData }: Props) => {\r\n  const { data: userData } = useSWR('/api/user', fetcher, { initialData: initialUserData });\r\n\r\n  useEffect(() => {\r\n    console.log(userData);\r\n  }, []);\r\n\r\n  if (userData?.status === 'pending') {\r\n    return <ExpiredValidation />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Row justify=\"center\" gutter={16}>\r\n        <Col span={12}>\r\n          <Avatar src={userData?.profile ? `http://localhost:3100/${userData?.profile}` : null} size={64}>\r\n            {userData?.profile ? null : userData?.nickname[0]}\r\n          </Avatar>\r\n        </Col>\r\n      </Row>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const user = await fetcher(`/api/user/${context.params?.id}`);\r\n  return { props: { user } };\r\n});\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}