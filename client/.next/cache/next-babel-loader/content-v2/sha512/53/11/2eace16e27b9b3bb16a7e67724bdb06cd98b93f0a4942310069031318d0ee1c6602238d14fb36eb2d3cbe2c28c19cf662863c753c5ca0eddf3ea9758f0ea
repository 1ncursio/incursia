{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useRouter } from 'next/router';\nimport AppLayout from '@components/AppLayout';\nimport useSWR from 'swr';\nimport { fetcher } from '@utils/fetcher';\nimport PostCard from '@components/PostCard';\nimport UserPageMenu from '@components/UserPageMenu';\nimport UserPageProfile from '@components/UserPageProfile';\nimport ExpiredValidation from '@components/ExpiredValidation';\nimport { MenuHeaderWrapper, MenuHeader } from '@pages/user/[id]/style';\nimport wrapper from '../../../store/configureStore';\n\nconst UserIllustration = ({\n  user: initialUser,\n  posts: initialPosts\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    data: userData\n  } = useSWR(`/api/user/${id}?lastId=0`, fetcher, {\n    initialData: initialUser\n  });\n  const {\n    data: postsData\n  } = useSWR(`/api/user/${id}/posts`, fetcher, {\n    initialData: initialPosts\n  });\n\n  if ((userData === null || userData === void 0 ? void 0 : userData.status) === 'pending') {\n    return /*#__PURE__*/_jsx(ExpiredValidation, {});\n  }\n\n  return /*#__PURE__*/_jsx(AppLayout, {\n    children: /*#__PURE__*/_jsx(Row, {\n      justify: \"center\",\n      gutter: 16,\n      children: /*#__PURE__*/_jsxs(Col, {\n        span: 18,\n        children: [/*#__PURE__*/_jsx(UserPageProfile, {\n          userData: userData\n        }), id && /*#__PURE__*/_jsx(UserPageMenu, {\n          current: \"illustration\",\n          userId: parseInt(id, 10)\n        }), /*#__PURE__*/_jsx(MenuHeaderWrapper, {\n          children: /*#__PURE__*/_jsx(MenuHeader, {\n            children: `${postsData.length}개의 일러스트`\n          })\n        }), /*#__PURE__*/_jsx(Row, {\n          gutter: [8, 8],\n          children: postsData === null || postsData === void 0 ? void 0 : postsData.map(post => /*#__PURE__*/_jsx(Col, {\n            xs: 24,\n            md: 4,\n            children: /*#__PURE__*/_jsx(PostCard, {\n              post: post,\n              avatarVisible: false\n            }, post.id)\n          }, post.id))\n        })]\n      })\n    })\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  var _context$params, _context$params2;\n\n  const user = await fetcher(`/api/user/${(_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.id}?lastId=0`);\n  const posts = await fetcher(`/api/user/${(_context$params2 = context.params) === null || _context$params2 === void 0 ? void 0 : _context$params2.id}/posts`);\n  return {\n    props: {\n      user,\n      posts\n    }\n  };\n});\nexport default UserIllustration;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/pages/user/[id]/illustration.tsx"],"names":["React","Col","Row","useRouter","AppLayout","useSWR","fetcher","PostCard","UserPageMenu","UserPageProfile","ExpiredValidation","MenuHeaderWrapper","MenuHeader","wrapper","UserIllustration","user","initialUser","posts","initialPosts","router","id","query","data","userData","initialData","postsData","status","parseInt","length","map","post","getServerSideProps","context","params","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport { useRouter } from 'next/router';\r\nimport AppLayout from '@components/AppLayout';\r\nimport useSWR from 'swr';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport PostCard from '@components/PostCard';\r\nimport UserPageMenu from '@components/UserPageMenu';\r\nimport UserPageProfile from '@components/UserPageProfile';\r\nimport { IUser } from '@typings/IUser';\r\nimport { IPost } from '@typings/IPost';\r\nimport ExpiredValidation from '@components/ExpiredValidation';\r\nimport { MenuHeaderWrapper, MenuHeader } from '@pages/user/[id]/style';\r\nimport wrapper from '../../../store/configureStore';\r\n\r\ninterface Props {\r\n  user: IUser;\r\n  posts: IPost[];\r\n}\r\n\r\nconst UserIllustration = ({ user: initialUser, posts: initialPosts }: Props) => {\r\n  const router = useRouter();\r\n\r\n  const { id }: { id?: string } = router.query;\r\n\r\n  const { data: userData } = useSWR(`/api/user/${id}?lastId=0`, fetcher, { initialData: initialUser });\r\n\r\n  const { data: postsData } = useSWR(`/api/user/${id}/posts`, fetcher, { initialData: initialPosts });\r\n\r\n  if (userData?.status === 'pending') {\r\n    return <ExpiredValidation />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Row justify=\"center\" gutter={16}>\r\n        <Col span={18}>\r\n          <UserPageProfile userData={userData} />\r\n          {id && <UserPageMenu current=\"illustration\" userId={parseInt(id, 10)} />}\r\n          <MenuHeaderWrapper>\r\n            <MenuHeader>{`${postsData.length}개의 일러스트`}</MenuHeader>\r\n          </MenuHeaderWrapper>\r\n          <Row gutter={[8, 8]}>\r\n            {postsData?.map((post: IPost) => (\r\n              <Col xs={24} md={4} key={post.id}>\r\n                <PostCard key={post.id} post={post} avatarVisible={false} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const user = await fetcher(`/api/user/${context.params?.id}?lastId=0`);\r\n  const posts = await fetcher(`/api/user/${context.params?.id}/posts`);\r\n  return { props: { user, posts } };\r\n});\r\n\r\nexport default UserIllustration;\r\n"]},"metadata":{},"sourceType":"module"}