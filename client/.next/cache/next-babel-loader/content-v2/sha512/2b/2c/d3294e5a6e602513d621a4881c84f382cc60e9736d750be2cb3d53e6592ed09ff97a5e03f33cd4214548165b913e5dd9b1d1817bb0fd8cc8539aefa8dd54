{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\components\\\\SignupForm.tsx\";\nimport { Button, Checkbox, Form, Input, Modal } from 'antd';\nimport Head from 'next/head';\nimport React, { useCallback, useState } from 'react'; // @ts-ignore\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport useInput from '@hooks/useInput';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"SignupForm__ErrorMessage\",\n  componentId: \"x45cxh-0\"\n})([\"color:red;\"]);\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"SignupForm__ButtonWrapper\",\n  componentId: \"x45cxh-1\"\n})([\"margin-top:10px;\"]);\nconst FormItemWrapper = styled(Form.Item).withConfig({\n  displayName: \"SignupForm__FormItemWrapper\",\n  componentId: \"x45cxh-2\"\n})([\"margin-bottom:5px;\"]);\n\nconst SignupForm = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: Confirmpassword,\n    1: setConfirmpassword\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setpasswordError\n  } = useState(false);\n  const {\n    0: Term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: TermError,\n    1: setTermError\n  } = useState(false);\n  const onChangeConfirmpassword = useCallback(e => {\n    setConfirmpassword(e.target.value);\n    setpasswordError(e.target.value !== password);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onFinish = useCallback(() => {\n    if (!email || !nickname || !password || !Confirmpassword) {\n      Modal.error({\n        title: '회원가입 오류',\n        content: '빈 칸을 작성해 주세요.'\n      });\n    }\n\n    if (password !== Confirmpassword) {\n      return setpasswordError(true);\n    }\n\n    if (!Term) {\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, password);\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [email, password, Confirmpassword, Term]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | \\uC720\\uD1A0\\uD53C\\uC544\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onFinish,\n      layout: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(FormItemWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          value: email,\n          onChange: onChangeEmail,\n          placeholder: \"\\uC774\\uBA54\\uC77C\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItemWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: nickname,\n          onChange: onChangeNickname,\n          placeholder: \"\\uB2C9\\uB124\\uC784\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItemWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          value: password,\n          onChange: onChangePassword,\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 (\\uCD5C\\uC18C 8\\uC790)\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItemWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          value: Confirmpassword,\n          onChange: onChangeConfirmpassword,\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItemWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: Term,\n          onChange: onChangeTerm,\n          children: \"\\uC778\\uD06C \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), TermError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormItemWrapper, {\n        children: /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: signUpLoading,\n            size: \"large\",\n            shape: \"round\",\n            block: true,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // SignupForm.propTypes = {\n//   onClickLogIn: PropTypes.func.isRequired,\n// };\n\n\nexport default SignupForm;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/SignupForm.tsx"],"names":["Button","Checkbox","Form","Input","Modal","Head","React","useCallback","useState","useDispatch","useSelector","styled","useInput","SIGN_UP_REQUEST","ErrorMessage","div","ButtonWrapper","FormItemWrapper","Item","SignupForm","dispatch","signUpLoading","state","user","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","Confirmpassword","setConfirmpassword","passwordError","setpasswordError","Term","setTerm","TermError","setTermError","onChangeConfirmpassword","e","target","value","onChangeTerm","checked","onFinish","error","title","content","console","log","type","data"],"mappings":"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","sourcesContent":["import { Button, Checkbox, Form, Input, Modal } from 'antd';\r\nimport Head from 'next/head';\r\nimport React, { useCallback, useState } from 'react';\r\n// @ts-ignore\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport useInput from '@hooks/useInput';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormItemWrapper = styled(Form.Item)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst SignupForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { signUpLoading } = useSelector((state: any) => state.user);\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [Confirmpassword, setConfirmpassword] = useState('');\r\n  const [passwordError, setpasswordError] = useState(false);\r\n  const [Term, setTerm] = useState(false);\r\n  const [TermError, setTermError] = useState(false);\r\n\r\n  const onChangeConfirmpassword = useCallback(\r\n    (e) => {\r\n      setConfirmpassword(e.target.value);\r\n      setpasswordError(e.target.value !== password);\r\n    },\r\n    [password],\r\n  );\r\n\r\n  const onChangeTerm = useCallback((e) => {\r\n    setTerm(e.target.checked);\r\n    setTermError(false);\r\n  }, []);\r\n\r\n  const onFinish = useCallback(() => {\r\n    if (!email || !nickname || !password || !Confirmpassword) {\r\n      Modal.error({\r\n        title: '회원가입 오류',\r\n        content: '빈 칸을 작성해 주세요.',\r\n      });\r\n    }\r\n    if (password !== Confirmpassword) {\r\n      return setpasswordError(true);\r\n    }\r\n    if (!Term) {\r\n      return setTermError(true);\r\n    }\r\n    console.log(email, nickname, password);\r\n    return dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: { email, password, nickname },\r\n    });\r\n  }, [email, password, Confirmpassword, Term]);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>회원가입 | 유토피아</title>\r\n      </Head>\r\n\r\n      <Form onFinish={onFinish} layout=\"vertical\">\r\n        <FormItemWrapper>\r\n          <Input type=\"email\" value={email} onChange={onChangeEmail} placeholder=\"이메일\" size=\"large\" />\r\n        </FormItemWrapper>\r\n        <FormItemWrapper>\r\n          <Input type=\"text\" value={nickname} onChange={onChangeNickname} placeholder=\"닉네임\" size=\"large\" />\r\n        </FormItemWrapper>\r\n        <FormItemWrapper>\r\n          <Input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            placeholder=\"비밀번호 (최소 8자)\"\r\n            size=\"large\"\r\n          />\r\n        </FormItemWrapper>\r\n        <FormItemWrapper>\r\n          <Input\r\n            type=\"password\"\r\n            value={Confirmpassword}\r\n            onChange={onChangeConfirmpassword}\r\n            placeholder=\"비밀번호 확인\"\r\n            size=\"large\"\r\n          />\r\n          {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>}\r\n        </FormItemWrapper>\r\n        <FormItemWrapper>\r\n          <Checkbox checked={Term} onChange={onChangeTerm}>\r\n            인크 말을 잘 들을 것을 동의\r\n          </Checkbox>\r\n          {TermError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n        </FormItemWrapper>\r\n        <FormItemWrapper>\r\n          <ButtonWrapper>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading} size=\"large\" shape=\"round\" block>\r\n              회원가입\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </FormItemWrapper>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\n// SignupForm.propTypes = {\r\n//   onClickLogIn: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default SignupForm;\r\n"]},"metadata":{},"sourceType":"module"}