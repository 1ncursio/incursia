{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Col, Form, Input, Button, Typography, Upload, message, Modal, Row } from 'antd'; // @ts-ignore\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { PlusOutlined } from '@ant-design/icons';\nimport useSWR from 'swr';\nimport useInput from '@hooks/useInput';\nimport AppLayout from '@components/AppLayout';\nimport TagForm from '@components/TagForm';\nimport { fetcher } from '@utils/fetcher';\nimport ExpiredValidation from '@components/ExpiredValidation';\nimport { UPLOAD_IMAGES_REQUEST, ADD_POST_REQUEST, REMOVE_IMAGE } from '../reducers/post'; // const { Option } = Select;\n\nconst {\n  Paragraph\n} = Typography;\nconst {\n  TextArea\n} = Input;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nconst upload = () => {\n  const dispatch = useDispatch();\n  const {\n    data: userData\n  } = useSWR('/api/user', fetcher); // @ts-ignore\n\n  const {\n    imagePaths,\n    addedPostId\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (!userData) {\n      Router.replace('/login');\n    }\n  }, [userData]);\n  useEffect(() => {\n    if (addedPostId) {\n      Router.replace(`/illustration/${addedPostId}`);\n    }\n  }, [addedPostId]);\n  const [title, onChangeTitle] = useInput('');\n  const [caption, onChangeCaption] = useInput('');\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: fileSize,\n    1: setFileSize\n  } = useState(0);\n  const {\n    0: previewImage,\n    1: setPreviewImage\n  } = useState('');\n  const {\n    0: previewTitle,\n    1: setPreviewTitle\n  } = useState('');\n  const {\n    0: previewVisible,\n    1: setPreviewVisible\n  } = useState(false);\n  const onCancel = useCallback(() => {\n    setPreviewVisible(false);\n  }, []);\n  const onPreview = useCallback(async file => {\n    console.log(file.originFileObj);\n\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n    console.log(file);\n  }, []);\n  const onChangeFileList = useCallback(({\n    fileList: newFileList\n  }) => {\n    console.log(newFileList);\n    setFileList(newFileList);\n    const fileSizes = newFileList.map(file => file.size);\n    setFileSize(Math.round(fileSizes.reduce((p, c) => p + c, 0) / 1024 / 1024 * 100) / 100);\n  }, []);\n  const onRemoveFile = useCallback(file => {\n    const fileIndex = fileList.findIndex(v => v === file);\n    console.log(fileIndex);\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: fileIndex\n    });\n  }, [fileList]);\n  const beforeUpload = useCallback(file => {\n    if (file.type !== 'image/jpg' && file.type !== 'image/jpeg' && file.type !== 'image/png') {\n      message.error('jpg jpeg png 사진만 가능해요!');\n      return false;\n    }\n\n    if (file.size > 10 * 1024 * 1024) {\n      message.error('이미지는 10MB 이하만 가능해요!');\n      return false;\n    }\n\n    const imageFormData = new FormData();\n    imageFormData.append('image', file);\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n    return true;\n  }, []);\n  const onFinish = useCallback(() => {\n    console.log({\n      title,\n      caption,\n      tags,\n      imagePaths\n    });\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        title,\n        caption,\n        tags,\n        imagePaths\n      }\n    }); // Router.replace(`/illustration/${addedPostId}`)\n  }, [title, caption, tags, imagePaths]);\n\n  const uploadButton = /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(PlusOutlined, {}), /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"\\uC5C5\\uB85C\\uB4DC\"\n    })]\n  });\n\n  if ((userData === null || userData === void 0 ? void 0 : userData.status) === 'pending') {\n    return /*#__PURE__*/_jsx(ExpiredValidation, {});\n  }\n\n  return /*#__PURE__*/_jsx(AppLayout, {\n    children: /*#__PURE__*/_jsx(Row, {\n      justify: \"center\",\n      gutter: 16,\n      children: /*#__PURE__*/_jsx(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxs(Form, {\n          onFinish: onFinish,\n          children: [/*#__PURE__*/_jsxs(Form.Item, {\n            children: [/*#__PURE__*/_jsx(Paragraph, {\n              children: \"JPG JPEG GIF PNG\"\n            }), /*#__PURE__*/_jsx(Paragraph, {\n              children: \"1\\uC7A5\\uB2F9 10MB \\uC774\\uB0B4, \\uCD5C\\uB300 20\\uC7A5 \\uC5C5\\uB85C\\uB4DC\"\n            }), /*#__PURE__*/_jsx(Paragraph, {\n              children: `${fileList.length}장 ${fileSize}MB`\n            }), /*#__PURE__*/_jsx(Upload, {\n              name: \"image\",\n              accept: \".jpg,.jpeg,.png,.gif\",\n              multiple: true,\n              maxCount: 20,\n              beforeUpload: beforeUpload,\n              onPreview: onPreview,\n              onChange: onChangeFileList,\n              listType: \"picture-card\",\n              fileList: fileList,\n              onRemove: onRemoveFile,\n              children: fileList.length >= 20 ? null : uploadButton\n            }), /*#__PURE__*/_jsx(Modal, {\n              visible: previewVisible,\n              title: previewTitle,\n              footer: null,\n              onCancel: onCancel,\n              children: /*#__PURE__*/_jsx(\"img\", {\n                alt: \"example\",\n                style: {\n                  width: '100%'\n                },\n                src: previewImage\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            children: /*#__PURE__*/_jsx(Input, {\n              type: \"text\",\n              value: title,\n              onChange: onChangeTitle,\n              placeholder: \"\\uD0C0\\uC774\\uD2C0\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            children: /*#__PURE__*/_jsx(TextArea, {\n              rows: 5,\n              placeholder: \"\\uCEA1\\uC158\",\n              value: caption,\n              onChange: onChangeCaption\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            children: /*#__PURE__*/_jsx(TagForm, {\n              tags: tags,\n              setTags: setTags\n            })\n          }), /*#__PURE__*/_jsxs(Form.Item, {\n            children: [/*#__PURE__*/_jsx(Paragraph, {\n              children: \"\\uC544\\uB798\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uC791\\uD488\\uC758 \\uC5C5\\uB85C\\uB4DC\\uB97C \\uAE08\\uC9C0\\uD569\\uB2C8\\uB2E4. \\uC5C5\\uB85C\\uB4DC\\uD558\\uC2DC\\uAE30 \\uC804\\uC5D0 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694.\"\n            }), /*#__PURE__*/_jsx(Paragraph, {\n              children: \"\\uD0C0\\uC778\\uC774 \\uC81C\\uC791\\uD55C \\uC791\\uD488, \\uC2DC\\uD310\\uB418\\uB294 \\uC0C1\\uD488\\uC758 \\uC774\\uBBF8\\uC9C0, \\uC81C\\uC0BC\\uC790\\uAC00 \\uAD8C\\uB9AC\\uB97C \\uC18C\\uC720\\uD55C \\uC774\\uBBF8\\uC9C0, \\uAC8C\\uC784 \\uBC0F \\uC601\\uC0C1 \\uC791\\uD488\\uC758 \\uCEA1\\uCC98, \\uC2A4\\uD06C\\uB9B0\\uC20F \\uC774\\uBBF8\\uC9C0\\uAC00 \\uD3EC\\uD568\\uB41C \\uC791\\uD488.\"\n            }), /*#__PURE__*/_jsx(Paragraph, {\n              children: \"\\uC704\\uC640 \\uAC19\\uC740 \\uC774\\uBBF8\\uC9C0\\uB97C \\uC720\\uC6A9\\uD558\\uC5EC, \\uCC98\\uC74C\\uBD80\\uD130 \\uBAA8\\uB4E0 \\uAC83\\uC744 \\uBCF8\\uC778\\uC774 \\uC9C1\\uC811 \\uADF8\\uB9AC\\uC9C0 \\uC54A\\uC740 \\uC791\\uD488.\"\n            }), /*#__PURE__*/_jsx(Paragraph, {\n              children: \"\\uC791\\uD488 \\uC774\\uC678\\uC758 \\uD53C\\uC0AC\\uCCB4\\uB97C \\uCC0D\\uC740 \\uC0AC\\uC9C4 \\uC774\\uBBF8\\uC9C0.\"\n            }), /*#__PURE__*/_jsx(Paragraph, {\n              children: \"\\uC774\\uC6A9\\uC57D\\uAD00\\uC5D0 \\uC704\\uBC18\\uD558\\uB294 \\uC791\\uD488\\uC758 \\uD22C\\uACE0 \\uC720\\uC800\\uB294 \\uD22C\\uACE0 \\uC791\\uD488 \\uACF5\\uAC1C \\uC815\\uC9C0, \\uACC4\\uC815 \\uC815\\uC9C0\\uC758 \\uB300\\uC0C1\\uC774 \\uB429\\uB2C8\\uB2E4.\"\n            })]\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            children: /*#__PURE__*/_jsx(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"\\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default upload;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/pages/upload.tsx"],"names":["React","useEffect","useCallback","useState","Col","Form","Input","Button","Typography","Upload","message","Modal","Row","useDispatch","useSelector","Router","PlusOutlined","useSWR","useInput","AppLayout","TagForm","fetcher","ExpiredValidation","UPLOAD_IMAGES_REQUEST","ADD_POST_REQUEST","REMOVE_IMAGE","Paragraph","TextArea","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","upload","dispatch","data","userData","imagePaths","addedPostId","state","post","replace","title","onChangeTitle","caption","onChangeCaption","tags","setTags","fileList","setFileList","fileSize","setFileSize","previewImage","setPreviewImage","previewTitle","setPreviewTitle","previewVisible","setPreviewVisible","onCancel","onPreview","console","log","originFileObj","url","preview","name","substring","lastIndexOf","onChangeFileList","newFileList","fileSizes","map","size","Math","round","reduce","p","c","onRemoveFile","fileIndex","findIndex","v","type","beforeUpload","imageFormData","FormData","append","onFinish","uploadButton","marginTop","status","length","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\r\nimport { Col, Form, Input, Button, Typography, Upload, message, Modal, Row } from 'antd';\r\n// @ts-ignore\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport useSWR from 'swr';\r\nimport useInput from '@hooks/useInput';\r\nimport AppLayout from '@components/AppLayout';\r\nimport TagForm from '@components/TagForm';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport ExpiredValidation from '@components/ExpiredValidation';\r\nimport { UPLOAD_IMAGES_REQUEST, ADD_POST_REQUEST, REMOVE_IMAGE } from '../reducers/post';\r\n\r\n// const { Option } = Select;\r\nconst { Paragraph } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nfunction getBase64(file: Blob) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nconst upload = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { data: userData } = useSWR('/api/user', fetcher);\r\n  // @ts-ignore\r\n  const { imagePaths, addedPostId } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    if (!userData) {\r\n      Router.replace('/login');\r\n    }\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    if (addedPostId) {\r\n      Router.replace(`/illustration/${addedPostId}`);\r\n    }\r\n  }, [addedPostId]);\r\n\r\n  const [title, onChangeTitle] = useInput('');\r\n  const [caption, onChangeCaption] = useInput('');\r\n  const [tags, setTags] = useState<string[]>([]);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [fileSize, setFileSize] = useState(0);\r\n  const [previewImage, setPreviewImage] = useState('');\r\n  const [previewTitle, setPreviewTitle] = useState('');\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n\r\n  const onCancel = useCallback(() => {\r\n    setPreviewVisible(false);\r\n  }, []);\r\n\r\n  const onPreview = useCallback(async (file) => {\r\n    console.log(file.originFileObj);\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    console.log(file);\r\n  }, []);\r\n\r\n  const onChangeFileList = useCallback(({ fileList: newFileList }) => {\r\n    console.log(newFileList);\r\n    setFileList(newFileList);\r\n    const fileSizes = newFileList.map((file: Blob) => file.size);\r\n    setFileSize(Math.round((fileSizes.reduce((p: number, c: number) => p + c, 0) / 1024 / 1024) * 100) / 100);\r\n  }, []);\r\n\r\n  const onRemoveFile = useCallback(\r\n    (file) => {\r\n      const fileIndex = fileList.findIndex((v) => v === file);\r\n      console.log(fileIndex);\r\n      dispatch({\r\n        type: REMOVE_IMAGE,\r\n        data: fileIndex,\r\n      });\r\n    },\r\n    [fileList],\r\n  );\r\n\r\n  const beforeUpload = useCallback((file) => {\r\n    if (file.type !== 'image/jpg' && file.type !== 'image/jpeg' && file.type !== 'image/png') {\r\n      message.error('jpg jpeg png 사진만 가능해요!');\r\n      return false;\r\n    }\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      message.error('이미지는 10MB 이하만 가능해요!');\r\n      return false;\r\n    }\r\n    const imageFormData = new FormData();\r\n    imageFormData.append('image', file);\r\n\r\n    dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    });\r\n\r\n    return true;\r\n  }, []);\r\n\r\n  const onFinish = useCallback(() => {\r\n    console.log({ title, caption, tags, imagePaths });\r\n\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: {\r\n        title,\r\n        caption,\r\n        tags,\r\n        imagePaths,\r\n      },\r\n    });\r\n    // Router.replace(`/illustration/${addedPostId}`)\r\n  }, [title, caption, tags, imagePaths]);\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div style={{ marginTop: 8 }}>업로드</div>\r\n    </div>\r\n  );\r\n\r\n  if (userData?.status === 'pending') {\r\n    return <ExpiredValidation />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Row justify=\"center\" gutter={16}>\r\n        <Col span={12}>\r\n          <Form onFinish={onFinish}>\r\n            <Form.Item>\r\n              <Paragraph>JPG JPEG GIF PNG</Paragraph>\r\n              <Paragraph>1장당 10MB 이내, 최대 20장 업로드</Paragraph>\r\n              <Paragraph>{`${fileList.length}장 ${fileSize}MB`}</Paragraph>\r\n              <Upload\r\n                name=\"image\"\r\n                accept=\".jpg,.jpeg,.png,.gif\"\r\n                multiple\r\n                maxCount={20}\r\n                beforeUpload={beforeUpload}\r\n                onPreview={onPreview}\r\n                onChange={onChangeFileList}\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onRemove={onRemoveFile}\r\n              >\r\n                {fileList.length >= 20 ? null : uploadButton}\r\n              </Upload>\r\n              <Modal visible={previewVisible} title={previewTitle} footer={null} onCancel={onCancel}>\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n              </Modal>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Input type=\"text\" value={title} onChange={onChangeTitle} placeholder=\"타이틀\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <TextArea rows={5} placeholder=\"캡션\" value={caption} onChange={onChangeCaption} />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <TagForm tags={tags} setTags={setTags} />\r\n            </Form.Item>\r\n            {/* <Form.Item>\r\n          <Select defaultValue=\"public\" value>\r\n            <Option value=\"public\">전체 공개</Option>\r\n            <Option value=\"my\" disabled>\r\n              마이픽 공개\r\n            </Option>\r\n            <Option value=\"private\">비공개</Option>\r\n          </Select>\r\n        </Form.Item> */}\r\n            <Form.Item>\r\n              <Paragraph>아래에 해당하는 작품의 업로드를 금지합니다. 업로드하시기 전에 확인해주세요.</Paragraph>\r\n              <Paragraph>\r\n                타인이 제작한 작품, 시판되는 상품의 이미지, 제삼자가 권리를 소유한 이미지, 게임 및 영상 작품의 캡처,\r\n                스크린숏 이미지가 포함된 작품.\r\n              </Paragraph>\r\n              <Paragraph>위와 같은 이미지를 유용하여, 처음부터 모든 것을 본인이 직접 그리지 않은 작품.</Paragraph>\r\n              <Paragraph>작품 이외의 피사체를 찍은 사진 이미지.</Paragraph>\r\n              <Paragraph>\r\n                이용약관에 위반하는 작품의 투고 유저는 투고 작품 공개 정지, 계정 정지의 대상이 됩니다.\r\n              </Paragraph>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                업로드하기\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default upload;\r\n"]},"metadata":{},"sourceType":"module"}