{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport 'antd/dist/antd.css'; // import '../style/my_custom.css';\n\nimport { createGlobalStyle } from 'styled-components'; // @ts-ignore\n\nimport wrapper from '../store/configureStore';\nconst Global = createGlobalStyle`\n    body {\n      font-family: 'Noto Sans KR';\n      background-color: #f8f9fa;\n    }\n\n    .ant-row {\n        margin-right: 0 !important;\n        margin-left: 0 !important;\n    }\n\n    .ant-col:first-child {\n        padding-left: 0 !important;\n    }\n\n    .ant-col:last-child {\n        padding-right: 0 !important;\n    }\n`;\n\nconst Utopia = ({\n  Component,\n  pageProps\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uC720\\uD1A0\\uD53C\\uC544\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nUtopia.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\nexport default wrapper.withRedux(Utopia);","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/pages/_app.tsx"],"names":["React","Head","createGlobalStyle","wrapper","Global","Utopia","Component","pageProps","propTypes","PropTypes","elementType","isRequired","object","withRedux"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAmC,OAAnC;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,oBAAP,C,CACA;;AACA,SAASC,iBAAT,QAAkC,mBAAlC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,MAAMC,MAAM,GAAGF,iBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;;AAoBA,MAAMG,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAwC;AACrD,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAM,QAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,IAAI,EAAC,iFAAX;AAA6F,QAAA,GAAG,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD,CAZD;;AAcAF,MAAM,CAACG,SAAP,GAAmB;AACjBF,EAAAA,SAAS,EAAEG,SAAS,CAACC,WAAV,CAAsBC,UADhB;AAEjBJ,EAAAA,SAAS,EAAEE,SAAS,CAACG,MAAV,CAAiBD;AAFX,CAAnB;AAKA,eAAeR,OAAO,CAACU,SAAR,CAAkBR,MAAlB,CAAf","sourcesContent":["import React, { ElementType } from 'react';\r\nimport { AppProps } from 'next/app';\r\nimport Head from 'next/head';\r\nimport 'antd/dist/antd.css';\r\n// import '../style/my_custom.css';\r\nimport { createGlobalStyle } from 'styled-components';\r\n// @ts-ignore\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst Global = createGlobalStyle`\r\n    body {\r\n      font-family: 'Noto Sans KR';\r\n      background-color: #f8f9fa;\r\n    }\r\n\r\n    .ant-row {\r\n        margin-right: 0 !important;\r\n        margin-left: 0 !important;\r\n    }\r\n\r\n    .ant-col:first-child {\r\n        padding-left: 0 !important;\r\n    }\r\n\r\n    .ant-col:last-child {\r\n        padding-right: 0 !important;\r\n    }\r\n`;\r\n\r\nconst Utopia = ({ Component, pageProps }: AppProps) => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>유토피아</title>\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap\" rel=\"stylesheet\" />\r\n      </Head>\r\n      <Global />\r\n      <Component {...pageProps} />\r\n    </>\r\n  );\r\n};\r\n\r\nUtopia.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  pageProps: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default wrapper.withRedux(Utopia);\r\n"]},"metadata":{},"sourceType":"module"}