{"ast":null,"code":"import { all, put, fork, takeLatest, call, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, DISLIKE_POST_REQUEST, DISLIKE_POST_SUCCESS, DISLIKE_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_REPLY_REQUEST, ADD_REPLY_SUCCESS, ADD_REPLY_FAILURE, REMOVE_COMMENT_REQUEST, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_FAILURE } from '../reducers/post';\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/api/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/api/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction dislikePostAPI(data) {\n  return axios.delete(`/api/post/${data}/like`);\n}\n\nfunction* dislikePost(action) {\n  try {\n    const result = yield call(dislikePostAPI, action.data);\n    yield put({\n      type: DISLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: DISLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/api/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addReplyAPI(data) {\n  return axios.post(`/api/post/${data.postId}/reply`, data);\n}\n\nfunction* addReply(action) {\n  try {\n    const result = yield call(addReplyAPI, action.data);\n    yield put({\n      type: ADD_REPLY_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_REPLY_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removeCommentAPI(data) {\n  return axios.delete(`/api/post/comment/${data}`);\n}\n\nfunction* removeComment(action) {\n  try {\n    const result = yield call(removeCommentAPI, action.data);\n    yield put({\n      type: REMOVE_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeEvery(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchDislikePost() {\n  yield takeLatest(DISLIKE_POST_REQUEST, dislikePost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchAddReply() {\n  yield takeLatest(ADD_REPLY_REQUEST, addReply);\n}\n\nfunction* watchRemoveComment() {\n  yield takeLatest(REMOVE_COMMENT_REQUEST, removeComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchUploadImages), fork(watchLikePost), fork(watchDislikePost), fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment), fork(watchAddReply), fork(watchRemoveComment)]);\n}","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/sagas/post.js"],"names":["all","put","fork","takeLatest","call","takeEvery","axios","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","DISLIKE_POST_REQUEST","DISLIKE_POST_SUCCESS","DISLIKE_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_REPLY_REQUEST","ADD_REPLY_SUCCESS","ADD_REPLY_FAILURE","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","uploadImagesAPI","data","post","uploadImages","action","result","type","err","console","error","response","likePostAPI","patch","likePost","dislikePostAPI","delete","dislikePost","addPostAPI","addPost","removePostAPI","removePost","addCommentAPI","postId","addComment","addReplyAPI","addReply","removeCommentAPI","removeComment","watchUploadImages","watchLikePost","watchDislikePost","watchAddPost","watchRemovePost","watchAddComment","watchAddReply","watchRemoveComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,SAA3C,QAA4D,oBAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,iBANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,oBATF,EAUEC,gBAVF,EAWEC,gBAXF,EAYEC,gBAZF,EAaEC,mBAbF,EAcEC,mBAdF,EAeEC,mBAfF,EAgBEC,mBAhBF,EAiBEC,mBAjBF,EAkBEC,mBAlBF,EAmBEC,iBAnBF,EAoBEC,iBApBF,EAqBEC,iBArBF,EAsBEC,sBAtBF,EAuBEC,sBAvBF,EAwBEC,sBAxBF,QAyBO,kBAzBP;;AA2BA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,SAAO1B,KAAK,CAAC2B,IAAN,CAAW,kBAAX,EAA+BD,IAA/B,CAAP;AACD;;AAED,UAAUE,YAAV,CAAuBC,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAAC2B,eAAD,EAAkBI,MAAM,CAACH,IAAzB,CAAzB;AACA,UAAM/B,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAE7B,qBADE;AAERwB,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMrC,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAE5B,qBADE;AAER+B,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASU,WAAT,CAAqBV,IAArB,EAA2B;AACzB,SAAO1B,KAAK,CAACqC,KAAN,CAAa,aAAYX,IAAK,OAA9B,CAAP;AACD;;AAED,UAAUY,QAAV,CAAmBT,MAAnB,EAA2B;AACzB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAACsC,WAAD,EAAcP,MAAM,CAACH,IAArB,CAAzB;AACA,UAAM/B,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAE1B,iBADE;AAERqB,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMrC,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEzB,iBADE;AAER4B,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASa,cAAT,CAAwBb,IAAxB,EAA8B;AAC5B,SAAO1B,KAAK,CAACwC,MAAN,CAAc,aAAYd,IAAK,OAA/B,CAAP;AACD;;AAED,UAAUe,WAAV,CAAsBZ,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAACyC,cAAD,EAAiBV,MAAM,CAACH,IAAxB,CAAzB;AACA,UAAM/B,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEvB,oBADE;AAERkB,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMrC,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEtB,oBADE;AAERyB,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASgB,UAAT,CAAoBhB,IAApB,EAA0B;AACxB,SAAO1B,KAAK,CAAC2B,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUiB,OAAV,CAAkBd,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAAC4C,UAAD,EAAab,MAAM,CAACH,IAApB,CAAzB;AACA,UAAM/B,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEpB,gBADE;AAERe,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZ,UAAMrC,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEnB,gBADE;AAERsB,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASkB,aAAT,CAAuBlB,IAAvB,EAA6B;AAC3B,SAAO1B,KAAK,CAACwC,MAAN,CAAc,aAAYd,IAAK,EAA/B,CAAP;AACD;;AAED,UAAUmB,UAAV,CAAqBhB,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAAC8C,aAAD,EAAgBf,MAAM,CAACH,IAAvB,CAAzB;AACA,UAAM/B,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEjB,mBADE;AAERY,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZ,UAAMrC,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEhB,mBADE;AAERmB,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASoB,aAAT,CAAuBpB,IAAvB,EAA6B;AAC3B,SAAO1B,KAAK,CAAC2B,IAAN,CAAY,aAAYD,IAAI,CAACqB,MAAO,UAApC,EAA+CrB,IAA/C,CAAP;AACD;;AAED,UAAUsB,UAAV,CAAqBnB,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAACgD,aAAD,EAAgBjB,MAAM,CAACH,IAAvB,CAAzB;AACA,UAAM/B,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEd,mBADE;AAERS,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMrC,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEb,mBADE;AAERgB,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASuB,WAAT,CAAqBvB,IAArB,EAA2B;AACzB,SAAO1B,KAAK,CAAC2B,IAAN,CAAY,aAAYD,IAAI,CAACqB,MAAO,QAApC,EAA6CrB,IAA7C,CAAP;AACD;;AAED,UAAUwB,QAAV,CAAmBrB,MAAnB,EAA2B;AACzB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAACmD,WAAD,EAAcpB,MAAM,CAACH,IAArB,CAAzB;AACA,UAAM/B,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEX,iBADE;AAERM,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMrC,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEV,iBADE;AAERa,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASyB,gBAAT,CAA0BzB,IAA1B,EAAgC;AAC9B,SAAO1B,KAAK,CAACwC,MAAN,CAAc,qBAAoBd,IAAK,EAAvC,CAAP;AACD;;AAED,UAAU0B,aAAV,CAAwBvB,MAAxB,EAAgC;AAC9B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhC,IAAI,CAACqD,gBAAD,EAAmBtB,MAAM,CAACH,IAA1B,CAAzB;AACA,UAAM/B,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAER,sBADE;AAERG,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMrC,GAAG,CAAC;AACRoC,MAAAA,IAAI,EAAEP,sBADE;AAERU,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAU2B,iBAAV,GAA8B;AAC5B,QAAMtD,SAAS,CAACE,qBAAD,EAAwB2B,YAAxB,CAAf;AACD;;AAED,UAAU0B,aAAV,GAA0B;AACxB,QAAMzD,UAAU,CAACO,iBAAD,EAAoBkC,QAApB,CAAhB;AACD;;AAED,UAAUiB,gBAAV,GAA6B;AAC3B,QAAM1D,UAAU,CAACU,oBAAD,EAAuBkC,WAAvB,CAAhB;AACD;;AAED,UAAUe,YAAV,GAAyB;AACvB,QAAM3D,UAAU,CAACa,gBAAD,EAAmBiC,OAAnB,CAAhB;AACD;;AAED,UAAUc,eAAV,GAA4B;AAC1B,QAAM5D,UAAU,CAACgB,mBAAD,EAAsBgC,UAAtB,CAAhB;AACD;;AAED,UAAUa,eAAV,GAA4B;AAC1B,QAAM7D,UAAU,CAACmB,mBAAD,EAAsBgC,UAAtB,CAAhB;AACD;;AAED,UAAUW,aAAV,GAA0B;AACxB,QAAM9D,UAAU,CAACsB,iBAAD,EAAoB+B,QAApB,CAAhB;AACD;;AAED,UAAUU,kBAAV,GAA+B;AAC7B,QAAM/D,UAAU,CAACyB,sBAAD,EAAyB8B,aAAzB,CAAhB;AACD;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAClC,QAAMnE,GAAG,CAAC,CACRE,IAAI,CAACyD,iBAAD,CADI,EAERzD,IAAI,CAAC0D,aAAD,CAFI,EAGR1D,IAAI,CAAC2D,gBAAD,CAHI,EAIR3D,IAAI,CAAC4D,YAAD,CAJI,EAKR5D,IAAI,CAAC6D,eAAD,CALI,EAMR7D,IAAI,CAAC8D,eAAD,CANI,EAOR9D,IAAI,CAAC+D,aAAD,CAPI,EAQR/D,IAAI,CAACgE,kBAAD,CARI,CAAD,CAAT;AAUD","sourcesContent":["import { all, put, fork, takeLatest, call, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  UPLOAD_IMAGES_REQUEST,\r\n  UPLOAD_IMAGES_SUCCESS,\r\n  UPLOAD_IMAGES_FAILURE,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  DISLIKE_POST_REQUEST,\r\n  DISLIKE_POST_SUCCESS,\r\n  DISLIKE_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_REPLY_REQUEST,\r\n  ADD_REPLY_SUCCESS,\r\n  ADD_REPLY_FAILURE,\r\n  REMOVE_COMMENT_REQUEST,\r\n  REMOVE_COMMENT_SUCCESS,\r\n  REMOVE_COMMENT_FAILURE,\r\n} from '../reducers/post';\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('/api/post/images', data);\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/api/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction dislikePostAPI(data) {\r\n  return axios.delete(`/api/post/${data}/like`);\r\n}\r\n\r\nfunction* dislikePost(action) {\r\n  try {\r\n    const result = yield call(dislikePostAPI, action.data);\r\n    yield put({\r\n      type: DISLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: DISLIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/api/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/api/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addReplyAPI(data) {\r\n  return axios.post(`/api/post/${data.postId}/reply`, data);\r\n}\r\n\r\nfunction* addReply(action) {\r\n  try {\r\n    const result = yield call(addReplyAPI, action.data);\r\n    yield put({\r\n      type: ADD_REPLY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_REPLY_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removeCommentAPI(data) {\r\n  return axios.delete(`/api/post/comment/${data}`);\r\n}\r\n\r\nfunction* removeComment(action) {\r\n  try {\r\n    const result = yield call(removeCommentAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeEvery(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchDislikePost() {\r\n  yield takeLatest(DISLIKE_POST_REQUEST, dislikePost);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction* watchAddReply() {\r\n  yield takeLatest(ADD_REPLY_REQUEST, addReply);\r\n}\r\n\r\nfunction* watchRemoveComment() {\r\n  yield takeLatest(REMOVE_COMMENT_REQUEST, removeComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchUploadImages),\r\n    fork(watchLikePost),\r\n    fork(watchDislikePost),\r\n    fork(watchAddPost),\r\n    fork(watchRemovePost),\r\n    fork(watchAddComment),\r\n    fork(watchAddReply),\r\n    fork(watchRemoveComment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}