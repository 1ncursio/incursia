{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react'; // @ts-ignore\n\nimport { useSelector } from 'react-redux';\nimport { Row, Col, Divider } from 'antd';\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\nimport AppLayout from '@components/AppLayout';\nimport PostCard from '@components/PostCard';\nimport { fetcher } from '@utils/fetcher';\nimport ExpiredValidation from '@components/ExpiredValidation';\n\nvar TagPage = function TagPage(_ref) {\n  var initialPosts = _ref.posts;\n  var router = useRouter();\n  var tagName = router.query.tagName;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      hasMorePosts = _useSelector.hasMorePosts;\n\n  var _useSWR = useSWR('/api/user', fetcher),\n      userData = _useSWR.data; // @ts-ignore\n\n\n  var _useSWR2 = useSWR(\"/api/posts/tag/\".concat(encodeURIComponent(tagName), \"?lastId=0\"), fetcher, {\n    initialData: initialPosts\n  }),\n      postsData = _useSWR2.data;\n\n  if ((userData === null || userData === void 0 ? void 0 : userData.status) === 'pending') {\n    return /*#__PURE__*/_jsx(ExpiredValidation, {});\n  }\n\n  return /*#__PURE__*/_jsx(AppLayout, {\n    children: /*#__PURE__*/_jsx(Row, {\n      justify: \"center\",\n      gutter: 16,\n      children: /*#__PURE__*/_jsx(Col, {\n        span: 18,\n        children: /*#__PURE__*/_jsxs(Row, {\n          gutter: [8, 8],\n          children: [/*#__PURE__*/_jsx(Divider, {\n            orientation: \"left\",\n            children: \"\".concat(tagName, \" - \\uD0DC\\uADF8 \\uAC80\\uC0C9 \\uACB0\\uACFC\")\n          }), postsData === null || postsData === void 0 ? void 0 : postsData.map(function (post) {\n            return /*#__PURE__*/_jsx(Col, {\n              span: 4,\n              children: /*#__PURE__*/_jsx(PostCard, {\n                post: post\n              }, post.id)\n            }, post.id);\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport var __N_SSP = true;\nexport default TagPage;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/pages/tag/[tagName].tsx"],"names":["React","useSelector","Row","Col","Divider","useSWR","useRouter","AppLayout","PostCard","fetcher","ExpiredValidation","TagPage","initialPosts","posts","router","tagName","query","state","post","hasMorePosts","userData","data","encodeURIComponent","initialData","postsData","status","map","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,OAAnB,QAAkC,MAAlC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAoC;AAAA,MAA1BC,YAA0B,QAAjCC,KAAiC;AAClD,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AADkD,MAE1CS,OAF0C,GAE9BD,MAAM,CAACE,KAFuB,CAE1CD,OAF0C;;AAAA,qBAIzBd,WAAW,CAAC,UAACgB,KAAD;AAAA,WAAgBA,KAAK,CAACC,IAAtB;AAAA,GAAD,CAJc;AAAA,MAI1CC,YAJ0C,gBAI1CA,YAJ0C;;AAAA,gBAMvBd,MAAM,CAAQ,WAAR,EAAqBI,OAArB,CANiB;AAAA,MAMpCW,QANoC,WAM1CC,IAN0C,EAOlD;;;AAPkD,iBAQtBhB,MAAM,0BAAmBiB,kBAAkB,CAACP,OAAD,CAArC,gBAA2DN,OAA3D,EAAoE;AACpGc,IAAAA,WAAW,EAAEX;AADuF,GAApE,CARgB;AAAA,MAQpCY,SARoC,YAQ1CH,IAR0C;;AAYlD,MAAI,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEK,MAAV,MAAqB,SAAzB,EAAoC;AAClC,wBAAO,KAAC,iBAAD,KAAP;AACD;;AAED,sBACE,KAAC,SAAD;AAAA,2BACE,KAAC,GAAD;AAAK,MAAA,OAAO,EAAC,QAAb;AAAsB,MAAA,MAAM,EAAE,EAA9B;AAAA,6BACE,KAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACE,MAAC,GAAD;AAAK,UAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAb;AAAA,kCACE,KAAC,OAAD;AAAS,YAAA,WAAW,EAAC,MAArB;AAAA,gCAAgCV,OAAhC;AAAA,YADF,EAEGS,SAFH,aAEGA,SAFH,uBAEGA,SAAS,CAAEE,GAAX,CAAe,UAACR,IAAD;AAAA,gCACd,KAAC,GAAD;AAAK,cAAA,IAAI,EAAE,CAAX;AAAA,qCACE,KAAC,QAAD;AAAwB,gBAAA,IAAI,EAAEA;AAA9B,iBAAeA,IAAI,CAACS,EAApB;AADF,eAAmBT,IAAI,CAACS,EAAxB,CADc;AAAA,WAAf,CAFH;AAAA;AADF;AADF;AADF,IADF;AAgBD,CAhCD;;;AAwCA,eAAehB,OAAf","sourcesContent":["import React from 'react';\r\n// @ts-ignore\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport useSWR from 'swr';\r\nimport { useRouter } from 'next/router';\r\nimport AppLayout from '@components/AppLayout';\r\nimport PostCard from '@components/PostCard';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport { IPost } from '@typings/IPost';\r\nimport ExpiredValidation from '@components/ExpiredValidation';\r\nimport { IUser } from '@typings/IUser';\r\nimport wrapper from '../../store/configureStore';\r\n\r\ninterface Props {\r\n  posts: IPost[];\r\n}\r\n\r\nconst TagPage = ({ posts: initialPosts }: Props) => {\r\n  const router = useRouter();\r\n  const { tagName } = router.query;\r\n\r\n  const { hasMorePosts } = useSelector((state: any) => state.post);\r\n\r\n  const { data: userData } = useSWR<IUser>('/api/user', fetcher);\r\n  // @ts-ignore\r\n  const { data: postsData } = useSWR(`/api/posts/tag/${encodeURIComponent(tagName)}?lastId=0`, fetcher, {\r\n    initialData: initialPosts,\r\n  });\r\n\r\n  if (userData?.status === 'pending') {\r\n    return <ExpiredValidation />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Row justify=\"center\" gutter={16}>\r\n        <Col span={18}>\r\n          <Row gutter={[8, 8]}>\r\n            <Divider orientation=\"left\">{`${tagName} - 태그 검색 결과`}</Divider>\r\n            {postsData?.map((post: IPost) => (\r\n              <Col span={4} key={post.id}>\r\n                <PostCard key={post.id} post={post} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  // @ts-ignore\r\n  const posts = await fetcher(`/api/posts/tag/${encodeURIComponent(context.params?.tagName)}?lastId=0`);\r\n  return { props: { posts } };\r\n});\r\n\r\nexport default TagPage;\r\n"]},"metadata":{},"sourceType":"module"}