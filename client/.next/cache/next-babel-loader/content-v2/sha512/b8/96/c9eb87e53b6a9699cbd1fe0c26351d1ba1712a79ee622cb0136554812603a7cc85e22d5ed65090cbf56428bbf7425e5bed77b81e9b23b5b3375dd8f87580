{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Avatar, List, Modal, Tooltip } from 'antd';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport React, { useCallback, useState } from 'react'; // @ts-ignore\n\nimport { useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport useSWR from 'swr';\nimport { fetcher } from '@utils/fetcher';\nimport CommentContent from '@components/CommentContent';\nimport CommentForm from '@components/CommentForm';\nimport CommentWrapper from '@components/CommentSection/styles';\nimport { REMOVE_COMMENT_REQUEST } from '../../reducers/post';\ndayjs.locale('ko');\ndayjs.extend(relativeTime);\n\nconst CommentSection = ({\n  postData,\n  postMutate\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: replyId,\n    1: setReplyId\n  } = useState(-1);\n  const {\n    data: userData\n  } = useSWR('/api/user', fetcher);\n  const toggleReplyForm = useCallback(id => {\n    console.log('toggleReplyForm called');\n\n    if (id !== replyId) {\n      setReplyId(id);\n      console.log(`${id} !== ${replyId}`);\n    } else {\n      setReplyId(-1);\n      console.log(`${id} === ${replyId}`);\n    }\n  }, [replyId]);\n  const onDeleteComment = useCallback(commentId => {\n    Modal.confirm({\n      content: '정말로 이 댓글을 삭제하시겠어요?',\n      okText: '삭제',\n      cancelText: '취소',\n      onOk: () => {\n        dispatch({\n          type: REMOVE_COMMENT_REQUEST,\n          data: commentId\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(CommentForm, {\n      placeholder: \"\\uB313\\uAE00 \\uB2EC\\uAE30\",\n      type: \"comment\",\n      setReplyId: setReplyId,\n      postData: postData,\n      postMutate: postMutate\n    }), (postData === null || postData === void 0 ? void 0 : postData.Comments) && /*#__PURE__*/_jsx(List, {\n      header: `${postData.Comments.length}개의 댓글`,\n      itemLayout: \"horizontal\",\n      dataSource: postData.Comments,\n      renderItem: item => /*#__PURE__*/_jsx(\"li\", {\n        children: /*#__PURE__*/_jsx(CommentWrapper, {\n          nested: item.id !== item.replyId,\n          actions: [/*#__PURE__*/_jsx(\"span\", {\n            onClick: () => toggleReplyForm(item.id),\n            children: \"\\uB2F5\\uAE00\"\n          }), /*#__PURE__*/_jsx(Tooltip, {\n            title: \"\\uC0AD\\uC81C\",\n            children: item.User.id === (userData === null || userData === void 0 ? void 0 : userData.id) && /*#__PURE__*/_jsx(DeleteOutlined, {\n              onClick: () => onDeleteComment(item.id)\n            })\n          })],\n          author: /*#__PURE__*/_jsx(Link, {\n            href: `/user/${item.User.id}/illustration`,\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: item.User.nickname\n            })\n          }),\n          avatar: /*#__PURE__*/_jsx(Link, {\n            href: `/user/${item.User.id}/illustration`,\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: /*#__PURE__*/_jsx(Avatar, {\n                src: item.User.profile && `http://localhost:3100/${item.User.profile}`,\n                children: !item.User.profile && item.User.nickname[0]\n              })\n            })\n          }),\n          datetime: /*#__PURE__*/_jsx(Tooltip, {\n            title: dayjs(item.createdAt).format('YYYY년 MM월 DD일 HH:mm'),\n            children: /*#__PURE__*/_jsx(\"span\", {\n              children: dayjs(item.createdAt).fromNow()\n            })\n          }),\n          content: /*#__PURE__*/_jsx(CommentContent, {\n            content: item.content\n          }),\n          children: replyId === item.id && /*#__PURE__*/_jsx(CommentForm, {\n            placeholder: \"\\uB2F5\\uAE00 \\uB2EC\\uAE30\",\n            type: \"reply\",\n            setReplyId: setReplyId,\n            replyId: replyId,\n            postData: postData,\n            postMutate: postMutate\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/CommentSection/index.tsx"],"names":["Avatar","List","Modal","Tooltip","dayjs","relativeTime","React","useCallback","useState","useDispatch","Link","DeleteOutlined","useSWR","fetcher","CommentContent","CommentForm","CommentWrapper","REMOVE_COMMENT_REQUEST","locale","extend","CommentSection","postData","postMutate","dispatch","replyId","setReplyId","data","userData","toggleReplyForm","id","console","log","onDeleteComment","commentId","confirm","content","okText","cancelText","onOk","type","Comments","length","item","User","nickname","profile","createdAt","format","fromNow"],"mappings":"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","sourcesContent":["import { Avatar, List, Modal, Tooltip } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/ko';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport React, { useCallback, useState } from 'react';\r\n// @ts-ignore\r\nimport { useDispatch } from 'react-redux';\r\nimport Link from 'next/link';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport useSWR from 'swr';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport CommentContent from '@components/CommentContent';\r\nimport { IPost } from '@typings/IPost';\r\nimport CommentForm from '@components/CommentForm';\r\nimport CommentWrapper from '@components/CommentSection/styles';\r\nimport { REMOVE_COMMENT_REQUEST } from '../../reducers/post';\r\n\r\ndayjs.locale('ko');\r\ndayjs.extend(relativeTime);\r\n\r\ninterface Props {\r\n  postData: IPost;\r\n  postMutate: any;\r\n}\r\n\r\nconst CommentSection = ({ postData, postMutate }: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [replyId, setReplyId] = useState(-1);\r\n\r\n  const { data: userData } = useSWR('/api/user', fetcher);\r\n\r\n  const toggleReplyForm = useCallback(\r\n    (id) => {\r\n      console.log('toggleReplyForm called');\r\n      if (id !== replyId) {\r\n        setReplyId(id);\r\n        console.log(`${id} !== ${replyId}`);\r\n      } else {\r\n        setReplyId(-1);\r\n        console.log(`${id} === ${replyId}`);\r\n      }\r\n    },\r\n    [replyId],\r\n  );\r\n\r\n  const onDeleteComment = useCallback((commentId) => {\r\n    Modal.confirm({\r\n      content: '정말로 이 댓글을 삭제하시겠어요?',\r\n      okText: '삭제',\r\n      cancelText: '취소',\r\n      onOk: () => {\r\n        dispatch({\r\n          type: REMOVE_COMMENT_REQUEST,\r\n          data: commentId,\r\n        });\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CommentForm\r\n        placeholder=\"댓글 달기\"\r\n        type=\"comment\"\r\n        setReplyId={setReplyId}\r\n        postData={postData}\r\n        postMutate={postMutate}\r\n      />\r\n      {postData?.Comments && (\r\n        <List\r\n          header={`${postData.Comments.length}개의 댓글`}\r\n          itemLayout=\"horizontal\"\r\n          dataSource={postData.Comments}\r\n          renderItem={(item) => (\r\n            <li>\r\n              <CommentWrapper\r\n                nested={item.id !== item.replyId}\r\n                actions={[\r\n                  <span onClick={() => toggleReplyForm(item.id)}>답글</span>,\r\n                  <Tooltip title=\"삭제\">\r\n                    {item.User.id === userData?.id && <DeleteOutlined onClick={() => onDeleteComment(item.id)} />}\r\n                  </Tooltip>,\r\n                ]}\r\n                author={\r\n                  <Link href={`/user/${item.User.id}/illustration`}>\r\n                    <a>{item.User.nickname}</a>\r\n                  </Link>\r\n                }\r\n                avatar={\r\n                  <Link href={`/user/${item.User.id}/illustration`}>\r\n                    <a>\r\n                      <Avatar src={item.User.profile && `http://localhost:3100/${item.User.profile}`}>\r\n                        {!item.User.profile && item.User.nickname[0]}\r\n                      </Avatar>\r\n                    </a>\r\n                  </Link>\r\n                }\r\n                datetime={\r\n                  <Tooltip title={dayjs(item.createdAt).format('YYYY년 MM월 DD일 HH:mm')}>\r\n                    <span>{dayjs(item.createdAt).fromNow()}</span>\r\n                  </Tooltip>\r\n                }\r\n                content={<CommentContent content={item.content} />}\r\n              >\r\n                {replyId === item.id && (\r\n                  <CommentForm\r\n                    placeholder=\"답글 달기\"\r\n                    type=\"reply\"\r\n                    setReplyId={setReplyId}\r\n                    replyId={replyId}\r\n                    postData={postData}\r\n                    postMutate={postMutate}\r\n                  />\r\n                )}\r\n              </CommentWrapper>\r\n            </li>\r\n          )}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n"]},"metadata":{},"sourceType":"module"}