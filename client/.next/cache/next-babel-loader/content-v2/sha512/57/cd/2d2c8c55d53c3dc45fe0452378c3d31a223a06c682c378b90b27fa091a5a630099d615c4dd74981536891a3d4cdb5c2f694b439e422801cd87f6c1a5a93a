{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport useSWR from 'swr';\nimport { fetcher } from '@utils/fetcher';\n\nvar CommentContent = function CommentContent(_ref) {\n  var content = _ref.content;\n  var emoticons = content.match(/:[^:\\s]*(?:::[^:\\s]*)*:/);\n  var emoticon = emoticons ? emoticons[0].slice(1, emoticons[0].length - 1) : null;\n\n  var _useSWR = useSWR(emoticon ? \"/api/emoticon/\".concat(emoticon) : null, fetcher),\n      emoticonData = _useSWR.data;\n\n  if (emoticonData) {\n    return /*#__PURE__*/_jsx(\"img\", {\n      alt: emoticonData.name,\n      src: \"http://localhost:3100/\".concat(emoticonData.src),\n      width: \"100\",\n      height: \"auto\"\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"p\", {\n    children: content\n  });\n};\n\nexport default CommentContent;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/CommentContent/index.tsx"],"names":["React","useSWR","fetcher","CommentContent","content","emoticons","match","emoticon","slice","length","emoticonData","data","name","src"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAwB;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAC7C,MAAMC,SAAS,GAAGD,OAAO,CAACE,KAAR,CAAc,yBAAd,CAAlB;AAEA,MAAMC,QAAQ,GAAGF,SAAS,GAAGA,SAAS,CAAC,CAAD,CAAT,CAAaG,KAAb,CAAmB,CAAnB,EAAsBH,SAAS,CAAC,CAAD,CAAT,CAAaI,MAAb,GAAsB,CAA5C,CAAH,GAAoD,IAA9E;;AAH6C,gBAKdR,MAAM,CAACM,QAAQ,2BAAoBA,QAApB,IAAiC,IAA1C,EAAgDL,OAAhD,CALQ;AAAA,MAK/BQ,YAL+B,WAKrCC,IALqC;;AAO7C,MAAID,YAAJ,EAAkB;AAChB,wBAAO;AAAK,MAAA,GAAG,EAAEA,YAAY,CAACE,IAAvB;AAA6B,MAAA,GAAG,kCAA2BF,YAAY,CAACG,GAAxC,CAAhC;AAA+E,MAAA,KAAK,EAAC,KAArF;AAA2F,MAAA,MAAM,EAAC;AAAlG,MAAP;AACD;;AAED,sBAAO;AAAA,cAAIT;AAAJ,IAAP;AACD,CAZD;;AAcA,eAAeD,cAAf","sourcesContent":["import React from 'react';\r\nimport useSWR from 'swr';\r\nimport { fetcher } from '@utils/fetcher';\r\n\r\ninterface Props {\r\n  content: string;\r\n}\r\n\r\nconst CommentContent = ({ content }: Props) => {\r\n  const emoticons = content.match(/:[^:\\s]*(?:::[^:\\s]*)*:/);\r\n\r\n  const emoticon = emoticons ? emoticons[0].slice(1, emoticons[0].length - 1) : null;\r\n\r\n  const { data: emoticonData } = useSWR(emoticon ? `/api/emoticon/${emoticon}` : null, fetcher);\r\n\r\n  if (emoticonData) {\r\n    return <img alt={emoticonData.name} src={`http://localhost:3100/${emoticonData.src}`} width=\"100\" height=\"auto\" />;\r\n  }\r\n\r\n  return <p>{content}</p>;\r\n};\r\n\r\nexport default CommentContent;\r\n"]},"metadata":{},"sourceType":"module"}