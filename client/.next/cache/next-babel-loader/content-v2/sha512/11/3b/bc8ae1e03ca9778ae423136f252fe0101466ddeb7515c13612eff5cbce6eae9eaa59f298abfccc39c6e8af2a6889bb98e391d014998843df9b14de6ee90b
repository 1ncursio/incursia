{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\components\\\\LoginForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react'; // @ts-ignore\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport { Form, Input, Button, Typography, Modal } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '@hooks/useInput';\nimport { loginRequestAction } from '../reducers/user';\nvar Text = Typography.Text;\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"yz7p5o-0\"\n})([\"margin-top:10px;\"]);\n_c = ButtonWrapper;\nvar FormItem = styled(Form.Item).withConfig({\n  displayName: \"LoginForm__FormItem\",\n  componentId: \"yz7p5o-1\"\n})([\"margin-bottom:5px;\"]);\n_c2 = FormItem;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      logInLoading = _useSelector.logInLoading,\n      logInError = _useSelector.logInError;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  useEffect(function () {\n    if (logInError) {\n      Modal.error({\n        content: logInError.message\n      });\n    }\n  }, [logInError]);\n  var onFinish = useCallback(function () {\n    if (!email || !password) {\n      return Modal.error({\n        title: '로그인 오류',\n        content: '이메일 또는 비밀번호를 입력해 주세요.'\n      });\n    }\n\n    console.log({\n      email: email,\n      password: password\n    });\n    return dispatch(loginRequestAction({\n      email: email,\n      password: password\n    }));\n  }, [email, password]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onFinish,\n    layout: \"vertical\",\n    children: [/*#__PURE__*/_jsxDEV(FormItem, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        value: email,\n        onChange: onChangeEmail,\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormItem, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        value: password,\n        onChange: onChangePassword,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormItem, {\n      children: /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: logInLoading,\n          size: \"large\",\n          shape: \"round\",\n          block: true,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormItem, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            size: \"large\",\n            shape: \"round\",\n            block: true,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormItem, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        type: \"secondary\",\n        style: {\n          \"float\": 'right'\n        },\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uBAA8\\uB974\\uACA0\\uC5B4\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LoginForm, \"7A9mrK6H2tIgiYIHUgzVW4yobFY=\", false, function () {\n  return [useDispatch, useSelector, useInput, useInput];\n});\n\n_c3 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormItem\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/LoginForm.tsx"],"names":["React","useCallback","useEffect","useDispatch","useSelector","Link","Form","Input","Button","Typography","Modal","styled","useInput","loginRequestAction","Text","ButtonWrapper","div","FormItem","Item","LoginForm","dispatch","state","user","logInLoading","logInError","email","onChangeEmail","password","onChangePassword","error","content","message","onFinish","title","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\n// @ts-ignore\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Link from 'next/link';\r\nimport { Form, Input, Button, Typography, Modal } from 'antd';\r\nimport styled from 'styled-components';\r\nimport useInput from '@hooks/useInput';\r\nimport { loginRequestAction } from '../reducers/user';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormItem = styled(Form.Item)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { logInLoading, logInError } = useSelector((state: any) => state.user);\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n\r\n  useEffect(() => {\r\n    if (logInError) {\r\n      Modal.error({\r\n        content: logInError.message,\r\n      });\r\n    }\r\n  }, [logInError]);\r\n\r\n  const onFinish = useCallback(() => {\r\n    if (!email || !password) {\r\n      return Modal.error({\r\n        title: '로그인 오류',\r\n        content: '이메일 또는 비밀번호를 입력해 주세요.',\r\n      });\r\n    }\r\n    console.log({ email, password });\r\n    return dispatch(loginRequestAction({ email, password }));\r\n  }, [email, password]);\r\n\r\n  return (\r\n    <Form onFinish={onFinish} layout=\"vertical\">\r\n      <FormItem>\r\n        <Input type=\"email\" value={email} onChange={onChangeEmail} placeholder=\"이메일\" size=\"large\" />\r\n      </FormItem>\r\n      <FormItem>\r\n        <Input type=\"password\" value={password} onChange={onChangePassword} placeholder=\"비밀번호\" size=\"large\" />\r\n      </FormItem>\r\n      <FormItem>\r\n        <ButtonWrapper>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading} size=\"large\" shape=\"round\" block>\r\n            로그인\r\n          </Button>\r\n        </ButtonWrapper>\r\n      </FormItem>\r\n      <FormItem>\r\n        <Link href=\"/signup\">\r\n          <a>\r\n            <Button htmlType=\"submit\" size=\"large\" shape=\"round\" block>\r\n              회원가입\r\n            </Button>\r\n          </a>\r\n        </Link>\r\n      </FormItem>\r\n      <FormItem>\r\n        <Text type=\"secondary\" style={{ float: 'right' }}>\r\n          비밀번호를 모르겠어요\r\n        </Text>\r\n      </FormItem>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}