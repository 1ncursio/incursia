{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\components\\\\PopoverEmoticon\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Col, Row } from 'antd';\nimport React, { useCallback } from 'react';\nimport useSWR from 'swr';\nimport { fetcher } from '@utils/fetcher';\n\nvar PopoverEmoticon = function PopoverEmoticon(_ref) {\n  _s();\n\n  var setCommentText = _ref.setCommentText,\n      setVisiblePopover = _ref.setVisiblePopover;\n\n  var _useSWR = useSWR('/api/emoticon', fetcher),\n      emoticonData = _useSWR.data;\n\n  var onClickEmoticon = useCallback(function (emoticon) {\n    setCommentText(\":\".concat(emoticon.name, \":\"));\n    setVisiblePopover(false);\n  }, [emoticonData]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: [16, 16],\n    style: {\n      width: 500\n    },\n    children: emoticonData === null || emoticonData === void 0 ? void 0 : emoticonData.map(function (emoticon) {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: function onClick() {\n            return onClickEmoticon(emoticon);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: emoticon.name,\n            src: \"http://localhost:3100/\".concat(emoticon.src),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PopoverEmoticon, \"QmqbGZxr3jUmogWAf1Sg8nDRw4c=\", false, function () {\n  return [useSWR];\n});\n\n_c = PopoverEmoticon;\nexport default PopoverEmoticon;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopoverEmoticon\");","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/PopoverEmoticon/index.tsx"],"names":["Col","Row","React","useCallback","useSWR","fetcher","PopoverEmoticon","setCommentText","setVisiblePopover","emoticonData","data","onClickEmoticon","emoticon","name","width","map","src"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AAEA,OAAOC,KAAP,IAAgBC,WAAhB,QAA6D,OAA7D;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAkD;AAAA;;AAAA,MAA/CC,cAA+C,QAA/CA,cAA+C;AAAA,MAA/BC,iBAA+B,QAA/BA,iBAA+B;;AAAA,gBACzCJ,MAAM,CAAc,eAAd,EAA+BC,OAA/B,CADmC;AAAA,MAC1DI,YAD0D,WAChEC,IADgE;;AAGxE,MAAMC,eAAe,GAAGR,WAAW,CACjC,UAACS,QAAD,EAAc;AACZL,IAAAA,cAAc,YAAKK,QAAQ,CAACC,IAAd,OAAd;AACAL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAJgC,EAKjC,CAACC,YAAD,CALiC,CAAnC;AAQA,sBACE,QAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAuB,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAA9B;AAAA,cACGL,YADH,aACGA,YADH,uBACGA,YAAY,CAAEM,GAAd,CAAkB,UAACH,QAAD;AAAA,0BACjB,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAMD,eAAe,CAACC,QAAD,CAArB;AAAA,WAAZ;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEA,QAAQ,CAACC,IAAnB;AAAyB,YAAA,GAAG,kCAA2BD,QAAQ,CAACI,GAApC,CAA5B;AAAuE,YAAA,KAAK,EAAE;AAAEF,cAAAA,KAAK,EAAE;AAAT;AAA9E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADiB;AAAA,KAAlB;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CAtBD;;GAAMR,e;UAC2BF,M;;;KAD3BE,e;AAwBN,eAAeA,eAAf","sourcesContent":["import { Col, Row } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useCallback, Dispatch, SetStateAction } from 'react';\r\nimport useSWR from 'swr';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport { IEmoticon } from '@typings/IEmoticon';\r\n\r\ninterface Props {\r\n  setCommentText: Dispatch<SetStateAction<string>>;\r\n  setVisiblePopover: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst PopoverEmoticon = ({ setCommentText, setVisiblePopover }: Props) => {\r\n  const { data: emoticonData } = useSWR<IEmoticon[]>('/api/emoticon', fetcher);\r\n\r\n  const onClickEmoticon = useCallback(\r\n    (emoticon) => {\r\n      setCommentText(`:${emoticon.name}:`);\r\n      setVisiblePopover(false);\r\n    },\r\n    [emoticonData],\r\n  );\r\n\r\n  return (\r\n    <Row gutter={[16, 16]} style={{ width: 500 }}>\r\n      {emoticonData?.map((emoticon) => (\r\n        <Col span={6}>\r\n          <a onClick={() => onClickEmoticon(emoticon)}>\r\n            <img alt={emoticon.name} src={`http://localhost:3100/${emoticon.src}`} style={{ width: '100%' }} />\r\n          </a>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PopoverEmoticon;\r\n"]},"metadata":{},"sourceType":"module"}