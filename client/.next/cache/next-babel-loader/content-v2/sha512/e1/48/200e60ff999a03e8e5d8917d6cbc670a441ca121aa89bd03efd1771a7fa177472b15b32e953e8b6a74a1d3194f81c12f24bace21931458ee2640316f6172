{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\components\\\\PostCard.js\",\n    _this = this;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from 'antd';\nimport Link from 'next/link';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport UserAvatar from './UserAvatar';\nvar TitleWrapper = styled.div.withConfig({\n  displayName: \"PostCard__TitleWrapper\",\n  componentId: \"sc-3s7olu-0\"\n})([\"margin-bottom:5px;\"]);\n_c = TitleWrapper;\nvar CoverImage = styled.img.withConfig({\n  displayName: \"PostCard__CoverImage\",\n  componentId: \"sc-3s7olu-1\"\n})([\"width:100%;height:140px;object-fit:cover;border-radius:8px;transition:0.2s;&:hover{opacity:0.8;}\"]);\n_c2 = CoverImage;\nmoment.locale('ko');\nvar Text = Typography.Text,\n    Title = Typography.Title;\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post,\n      avatarVisible = _ref.avatarVisible;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/illustration/\".concat(post.id),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(CoverImage, {\n          alt: post.title,\n          src: \"http://localhost:3100/\".concat(post.Images[0].src)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TitleWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/illustration/\".concat(post.id),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            strong: true,\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this), avatarVisible && /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/user/\".concat(post.User.id, \"/illustration\"),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(UserAvatar, {\n          userData: post.User,\n          marginRight: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_c3 = PostCard;\nPostCard.defaultProps = {\n  avatarVisible: true\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    title: PropTypes.string,\n    caption: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    Tags: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired,\n  avatarVisible: PropTypes.bool\n};\nexport default PostCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TitleWrapper\");\n$RefreshReg$(_c2, \"CoverImage\");\n$RefreshReg$(_c3, \"PostCard\");","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/PostCard.js"],"names":["React","PropTypes","Typography","Link","moment","styled","UserAvatar","TitleWrapper","div","CoverImage","img","locale","Text","Title","PostCard","post","avatarVisible","id","title","Images","src","User","defaultProps","propTypes","shape","number","object","string","caption","createdAt","Comments","arrayOf","Likers","Tags","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from 'antd';\r\nimport Link from 'next/link';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\nimport UserAvatar from './UserAvatar';\r\n\r\nconst TitleWrapper = styled.div`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n  width: 100%;\r\n  height: 140px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nmoment.locale('ko');\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst PostCard = ({ post, avatarVisible }) => {\r\n  return (\r\n    <>\r\n      <Link href={`/illustration/${post.id}`}>\r\n        <a>\r\n          <CoverImage alt={post.title} src={`http://localhost:3100/${post.Images[0].src}`} />\r\n        </a>\r\n      </Link>\r\n      <TitleWrapper>\r\n        <Link href={`/illustration/${post.id}`}>\r\n          <a>\r\n            <Text strong>{post.title}</Text>\r\n          </a>\r\n        </Link>\r\n      </TitleWrapper>\r\n      {avatarVisible && (\r\n        <Link href={`/user/${post.User.id}/illustration`}>\r\n          <a>\r\n            <UserAvatar userData={post.User} marginRight={4} />\r\n          </a>\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.defaultProps = {\r\n  avatarVisible: true,\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    title: PropTypes.string,\r\n    caption: PropTypes.string,\r\n    createdAt: PropTypes.string,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n    Likers: PropTypes.arrayOf(PropTypes.object),\r\n    Tags: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n  avatarVisible: PropTypes.bool,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}