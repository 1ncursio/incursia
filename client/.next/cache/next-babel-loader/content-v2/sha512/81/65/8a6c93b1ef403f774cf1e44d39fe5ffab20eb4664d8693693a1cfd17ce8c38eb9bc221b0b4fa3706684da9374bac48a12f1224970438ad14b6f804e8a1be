{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Image, Typography, Tag, Modal, Tooltip, Space } from 'antd';\nimport Link from 'next/link';\n// @ts-ignore\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HeartOutlined, ShareAltOutlined, DeleteOutlined, AlertOutlined, HeartFilled, EyeFilled } from '@ant-design/icons';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport useSWR from 'swr';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, DISLIKE_POST_REQUEST } from '../reducers/post';\nimport { fetcher } from '@utils/fetcher';\nimport styled from 'styled-components';\ndayjs.locale('ko');\nvar Title = Typography.Title,\n    Paragraph = Typography.Paragraph,\n    Text = Typography.Text;\nvar PostContent = styled.div.withConfig({\n  displayName: \"IllustCard__PostContent\",\n  componentId: \"yph7z8-0\"\n})([\"margin:32px 0 48px 0;\"]);\n\nvar IllustCard = function IllustCard(_ref) {\n  var postData = _ref.postData;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useSWR = useSWR('/api/user', fetcher),\n      userData = _useSWR.data,\n      userError = _useSWR.error;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostDone = _useSelector.removePostDone;\n\n  useEffect(function () {\n    if (userData && postData.Likers) setLiked(postData.Likers.find(function (v) {\n      return v.id === userData.id;\n    }) ? true : false);\n  }, [userData]);\n  var onLike = useCallback(function () {\n    if (!userData) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: postData.id\n    });\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, [userData, postData === null || postData === void 0 ? void 0 : postData.id]);\n  var onDislike = useCallback(function () {\n    if (!userData) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    dispatch({\n      type: DISLIKE_POST_REQUEST,\n      data: postData.id\n    });\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, [userData, postData === null || postData === void 0 ? void 0 : postData.id]);\n  var onClickDelete = useCallback(function () {\n    // 로그인 안 한 경우\n    if (!userData) {\n      return Modal.error({\n        content: '로그인이 필요합니다.',\n        okText: '확인'\n      });\n    }\n\n    Modal.confirm({\n      title: '글 삭제',\n      content: '정말로 이 글을 삭제하시겠어요?',\n      okText: '삭제',\n      cancelText: '취소',\n      onOk: function onOk() {\n        dispatch({\n          type: REMOVE_POST_REQUEST,\n          data: postData.id\n        });\n      }\n    });\n  }, [userData, postData === null || postData === void 0 ? void 0 : postData.id]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Image.PreviewGroup, {\n      children: postData === null || postData === void 0 ? void 0 : postData.Images.map(function (v) {\n        return /*#__PURE__*/_jsx(Image, {\n          width: \"100%\",\n          src: \"http://localhost:3100/\".concat(v.src)\n        }, v.src);\n      })\n    }), /*#__PURE__*/_jsxs(Space, {\n      style: {\n        \"float\": 'right'\n      },\n      children: [/*#__PURE__*/_jsx(Tooltip, {\n        title: \"\\uC88B\\uC544\\uC694!\",\n        children: liked ? /*#__PURE__*/_jsx(HeartFilled, {\n          style: {\n            fontSize: 24,\n            opacity: 0.9\n          },\n          onClick: onDislike\n        }) : /*#__PURE__*/_jsx(HeartOutlined, {\n          style: {\n            fontSize: 24,\n            opacity: 0.9\n          },\n          onClick: onLike\n        })\n      }), /*#__PURE__*/_jsx(Tooltip, {\n        title: \"\\uACF5\\uC720\\uD558\\uAE30!\",\n        children: /*#__PURE__*/_jsx(ShareAltOutlined, {\n          style: {\n            fontSize: 24,\n            opacity: 0.9\n          }\n        })\n      }), /*#__PURE__*/_jsx(Tooltip, {\n        title: \"\\uC2E0\\uACE0\\uD558\\uAE30\",\n        children: /*#__PURE__*/_jsx(AlertOutlined, {\n          style: {\n            fontSize: 24,\n            opacity: 0.9\n          }\n        })\n      }), (userData === null || userData === void 0 ? void 0 : userData.id) === (postData === null || postData === void 0 ? void 0 : postData.User.id) ? /*#__PURE__*/_jsx(Tooltip, {\n        title: \"\\uC0AD\\uC81C\\uD558\\uAE30\",\n        children: /*#__PURE__*/_jsx(DeleteOutlined, {\n          style: {\n            fontSize: 24\n          },\n          onClick: onClickDelete\n        })\n      }) : null]\n    }), /*#__PURE__*/_jsxs(PostContent, {\n      children: [/*#__PURE__*/_jsx(Title, {\n        level: 3,\n        children: postData === null || postData === void 0 ? void 0 : postData.title\n      }), /*#__PURE__*/_jsx(Paragraph, {\n        children: postData === null || postData === void 0 ? void 0 : postData.caption\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: postData === null || postData === void 0 ? void 0 : postData.Tags.map(function (tag) {\n          return /*#__PURE__*/_jsx(Link, {\n            href: \"/tag/\".concat(encodeURIComponent(tag.name)),\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: /*#__PURE__*/_jsx(Tag, {\n                color: \"blue\",\n                children: tag.name\n              })\n            })\n          }, tag.name);\n        })\n      }), /*#__PURE__*/_jsxs(Space, {\n        size: \"middle\",\n        style: {\n          margin: '16px 0'\n        },\n        children: [/*#__PURE__*/_jsxs(\"span\", {\n          children: [/*#__PURE__*/_jsx(HeartFilled, {\n            style: {\n              opacity: 0.45,\n              padding: 4\n            }\n          }), /*#__PURE__*/_jsx(Text, {\n            type: \"secondary\",\n            style: {\n              fontSize: '0.8rem'\n            },\n            children: postData === null || postData === void 0 ? void 0 : postData.Likers.length\n          })]\n        }), /*#__PURE__*/_jsxs(\"span\", {\n          children: [/*#__PURE__*/_jsx(EyeFilled, {\n            style: {\n              opacity: 0.45,\n              padding: 4\n            }\n          }), /*#__PURE__*/_jsx(Text, {\n            type: \"secondary\",\n            style: {\n              fontSize: '0.8rem'\n            },\n            children: postData === null || postData === void 0 ? void 0 : postData.views\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(Text, {\n          type: \"secondary\",\n          children: dayjs(postData === null || postData === void 0 ? void 0 : postData.createdAt).format('YYYY년 MM월 DD일 HH:mm')\n        })\n      })]\n    })]\n  });\n};\n\nexport default IllustCard;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/IllustCard.tsx"],"names":["React","useCallback","useEffect","useState","Image","Typography","Tag","Modal","Tooltip","Space","Link","useDispatch","useSelector","HeartOutlined","ShareAltOutlined","DeleteOutlined","AlertOutlined","HeartFilled","EyeFilled","dayjs","useSWR","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","DISLIKE_POST_REQUEST","fetcher","styled","locale","Title","Paragraph","Text","PostContent","div","IllustCard","postData","dispatch","liked","setLiked","userData","data","userError","error","state","post","removePostDone","Likers","find","v","id","onLike","alert","type","prev","onDislike","onClickDelete","content","okText","confirm","title","cancelText","onOk","Images","map","src","fontSize","opacity","User","caption","Tags","tag","encodeURIComponent","name","margin","padding","length","views","createdAt","format"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Image, Typography, Tag, Modal, Tooltip, Space } from 'antd';\r\nimport Link from 'next/link';\r\nimport Router, { useRouter } from 'next/router';\r\n// @ts-ignore\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  HeartOutlined,\r\n  ShareAltOutlined,\r\n  DeleteOutlined,\r\n  AlertOutlined,\r\n  HeartFilled,\r\n  EyeFilled,\r\n} from '@ant-design/icons';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/ko';\r\nimport useSWR from 'swr';\r\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, DISLIKE_POST_REQUEST } from '../reducers/post';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport styled from 'styled-components';\r\nimport { IPost } from '@typings/IPost';\r\nimport { IUser } from '@typings/IUser';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst PostContent = styled.div`\r\n  margin: 32px 0 48px 0;\r\n`;\r\n\r\ninterface Props {\r\n  postData: IPost;\r\n}\r\n\r\nconst IllustCard = ({ postData }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const { data: userData, error: userError } = useSWR<IUser>('/api/user', fetcher);\r\n\r\n  const { removePostDone } = useSelector((state: any) => state.post);\r\n\r\n  useEffect(() => {\r\n    if (userData && postData.Likers) setLiked(postData.Likers.find((v) => v.id === userData.id) ? true : false);\r\n  }, [userData]);\r\n\r\n  const onLike = useCallback(() => {\r\n    if (!userData) {\r\n      return alert('로그인이 필요합니다.');\r\n    }\r\n    dispatch({ type: LIKE_POST_REQUEST, data: postData.id });\r\n    setLiked((prev) => !prev);\r\n  }, [userData, postData?.id]);\r\n\r\n  const onDislike = useCallback(() => {\r\n    if (!userData) {\r\n      return alert('로그인이 필요합니다.');\r\n    }\r\n    dispatch({ type: DISLIKE_POST_REQUEST, data: postData.id });\r\n    setLiked((prev) => !prev);\r\n  }, [userData, postData?.id]);\r\n\r\n  const onClickDelete = useCallback(() => {\r\n    // 로그인 안 한 경우\r\n    if (!userData) {\r\n      return Modal.error({\r\n        content: '로그인이 필요합니다.',\r\n        okText: '확인',\r\n      });\r\n    }\r\n\r\n    Modal.confirm({\r\n      title: '글 삭제',\r\n      content: '정말로 이 글을 삭제하시겠어요?',\r\n      okText: '삭제',\r\n      cancelText: '취소',\r\n      onOk: () => {\r\n        dispatch({\r\n          type: REMOVE_POST_REQUEST,\r\n          data: postData.id,\r\n        });\r\n      },\r\n    });\r\n  }, [userData, postData?.id]);\r\n\r\n  return (\r\n    <>\r\n      <Image.PreviewGroup>\r\n        {postData?.Images.map((v) => (\r\n          <Image width=\"100%\" key={v.src} src={`http://localhost:3100/${v.src}`} />\r\n        ))}\r\n      </Image.PreviewGroup>\r\n      <Space style={{ float: 'right' }}>\r\n        <Tooltip title=\"좋아요!\">\r\n          {liked ? (\r\n            <HeartFilled style={{ fontSize: 24, opacity: 0.9 }} onClick={onDislike} />\r\n          ) : (\r\n            <HeartOutlined style={{ fontSize: 24, opacity: 0.9 }} onClick={onLike} />\r\n          )}\r\n        </Tooltip>\r\n        <Tooltip title=\"공유하기!\">\r\n          <ShareAltOutlined style={{ fontSize: 24, opacity: 0.9 }} />\r\n        </Tooltip>\r\n        <Tooltip title=\"신고하기\">\r\n          <AlertOutlined style={{ fontSize: 24, opacity: 0.9 }} />\r\n        </Tooltip>\r\n\r\n        {userData?.id === postData?.User.id ? (\r\n          <Tooltip title=\"삭제하기\">\r\n            <DeleteOutlined style={{ fontSize: 24 }} onClick={onClickDelete} />\r\n          </Tooltip>\r\n        ) : null}\r\n      </Space>\r\n      <PostContent>\r\n        <Title level={3}>{postData?.title}</Title>\r\n        <Paragraph>{postData?.caption}</Paragraph>\r\n        <div>\r\n          {postData?.Tags.map((tag) => (\r\n            <Link href={`/tag/${encodeURIComponent(tag.name)}`} key={tag.name}>\r\n              <a>\r\n                <Tag color=\"blue\">{tag.name}</Tag>\r\n              </a>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        <Space size=\"middle\" style={{ margin: '16px 0' }}>\r\n          <span>\r\n            <HeartFilled style={{ opacity: 0.45, padding: 4 }} />\r\n            <Text type=\"secondary\" style={{ fontSize: '0.8rem' }}>\r\n              {postData?.Likers.length}\r\n            </Text>\r\n          </span>\r\n          <span>\r\n            <EyeFilled style={{ opacity: 0.45, padding: 4 }} />\r\n            <Text type=\"secondary\" style={{ fontSize: '0.8rem' }}>\r\n              {postData?.views}\r\n            </Text>\r\n          </span>\r\n        </Space>\r\n        <div>\r\n          <Text type=\"secondary\">{dayjs(postData?.createdAt).format('YYYY년 MM월 DD일 HH:mm')}</Text>\r\n        </div>\r\n      </PostContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IllustCard;\r\n"]},"metadata":{},"sourceType":"module"}