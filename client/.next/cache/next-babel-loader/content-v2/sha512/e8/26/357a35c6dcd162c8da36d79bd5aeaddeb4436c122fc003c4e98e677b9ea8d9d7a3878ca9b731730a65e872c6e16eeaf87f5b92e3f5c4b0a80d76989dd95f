{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\components\\\\TagForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { Input, Tag, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport useInput from '@hooks/useInput';\n\nvar TagForm = function TagForm(_ref) {\n  _s();\n\n  var tags = _ref.tags,\n      setTags = _ref.setTags;\n\n  var _useState = useState(false),\n      inputVisible = _useState[0],\n      setInputVisible = _useState[1];\n\n  var _useState2 = useState(-1),\n      editInputIndex = _useState2[0],\n      setEditInputIndex = _useState2[1];\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      inputValue = _useInput2[0],\n      onChangeInputValue = _useInput2[1],\n      setInputValue = _useInput2[2];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 3),\n      editInputValue = _useInput4[0],\n      onChangeEditInputValue = _useInput4[1],\n      setEditInputValue = _useInput4[2];\n\n  var _onClose = useCallback(function (removedTag) {\n    setTags(tags.filter(function (tag) {\n      return tag !== removedTag;\n    }));\n  }, [tags]);\n\n  var onBlurEditInput = useCallback(function () {\n    var newTags = _toConsumableArray(tags);\n\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue('');\n  }, [tags, editInputIndex, editInputValue]);\n  var onBlurInput = useCallback(function () {\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      setTags([].concat(_toConsumableArray(tags), [inputValue]));\n    }\n\n    setInputVisible(false);\n    setInputValue('');\n  }, [inputValue]);\n  var showInput = useCallback(function () {\n    setInputVisible(true);\n  }, [inputVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [tags.map(function (tag, index) {\n      if (editInputIndex === index) {\n        return /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          autoFocus: true,\n          size: \"small\",\n          value: editInputValue,\n          onChange: onChangeEditInputValue,\n          onBlur: onBlurEditInput,\n          onPressEnter: onBlurEditInput,\n          style: {\n            width: 78\n          }\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, _this);\n      }\n\n      var isLongTag = tag.length > 10;\n\n      var tagElem = /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"blue\",\n        closable: true,\n        onClose: function onClose() {\n          return _onClose(tag);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onDoubleClick: function onDoubleClick(e) {\n            setEditInputIndex(index);\n            setEditInputValue(tag);\n            e.preventDefault();\n          },\n          children: isLongTag ? \"\".concat(tag.slice(0, 10), \"...\") : tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, _this)\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, _this);\n\n      return isLongTag ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: tag,\n        children: tagElem\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, _this) : tagElem;\n    }), inputVisible ? /*#__PURE__*/_jsxDEV(Input, {\n      autoFocus: true,\n      type: \"text\",\n      size: \"small\",\n      value: inputValue,\n      onChange: onChangeInputValue,\n      onBlur: onBlurInput,\n      onPressEnter: onBlurInput,\n      style: {\n        width: 78\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(Tag, {\n      color: \"blue\",\n      onClick: showInput,\n      children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, _this), ' 추가']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TagForm, \"zIR3sjQ6BggyctVnqQyWJu1l/5o=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = TagForm;\nexport default TagForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagForm\");","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/TagForm.tsx"],"names":["React","useState","useCallback","Input","Tag","Tooltip","PlusOutlined","useInput","TagForm","tags","setTags","inputVisible","setInputVisible","editInputIndex","setEditInputIndex","inputValue","onChangeInputValue","setInputValue","editInputValue","onChangeEditInputValue","setEditInputValue","onClose","removedTag","filter","tag","onBlurEditInput","newTags","onBlurInput","indexOf","showInput","map","index","width","isLongTag","length","tagElem","e","preventDefault","slice"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, Dispatch, SetStateAction } from 'react';\r\nimport { Input, Tag, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport useInput from '@hooks/useInput';\r\n\r\ninterface Props {\r\n  tags: Array<string>;\r\n  setTags: Dispatch<SetStateAction<string[]>>;\r\n}\r\n\r\nconst TagForm = ({ tags, setTags }: Props) => {\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const [editInputIndex, setEditInputIndex] = useState(-1);\r\n  const [inputValue, onChangeInputValue, setInputValue] = useInput('');\r\n  const [editInputValue, onChangeEditInputValue, setEditInputValue] = useInput('');\r\n\r\n  const onClose = useCallback(\r\n    (removedTag) => {\r\n      setTags(tags.filter((tag) => tag !== removedTag));\r\n    },\r\n    [tags],\r\n  );\r\n\r\n  const onBlurEditInput = useCallback(() => {\r\n    const newTags = [...tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    setTags(newTags);\r\n    setEditInputIndex(-1);\r\n    setEditInputValue('');\r\n  }, [tags, editInputIndex, editInputValue]);\r\n\r\n  const onBlurInput = useCallback(() => {\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      setTags([...tags, inputValue]);\r\n    }\r\n    setInputVisible(false);\r\n    setInputValue('');\r\n  }, [inputValue]);\r\n\r\n  const showInput = useCallback(() => {\r\n    setInputVisible(true);\r\n  }, [inputVisible]);\r\n\r\n  return (\r\n    <>\r\n      {tags.map((tag, index) => {\r\n        if (editInputIndex === index) {\r\n          return (\r\n            <Input\r\n              type=\"text\"\r\n              autoFocus\r\n              key={tag}\r\n              size=\"small\"\r\n              value={editInputValue}\r\n              onChange={onChangeEditInputValue}\r\n              onBlur={onBlurEditInput}\r\n              onPressEnter={onBlurEditInput}\r\n              style={{ width: 78 }}\r\n            />\r\n          );\r\n        }\r\n\r\n        const isLongTag = tag.length > 10;\r\n\r\n        const tagElem = (\r\n          <Tag color=\"blue\" key={tag} closable onClose={() => onClose(tag)}>\r\n            <span\r\n              onDoubleClick={(e) => {\r\n                setEditInputIndex(index);\r\n                setEditInputValue(tag);\r\n                e.preventDefault();\r\n              }}\r\n            >\r\n              {isLongTag ? `${tag.slice(0, 10)}...` : tag}\r\n            </span>\r\n          </Tag>\r\n        );\r\n        return isLongTag ? (\r\n          <Tooltip title={tag} key={tag}>\r\n            {tagElem}\r\n          </Tooltip>\r\n        ) : (\r\n          tagElem\r\n        );\r\n      })}\r\n      {inputVisible ? (\r\n        <Input\r\n          autoFocus\r\n          type=\"text\"\r\n          size=\"small\"\r\n          value={inputValue}\r\n          onChange={onChangeInputValue}\r\n          onBlur={onBlurInput}\r\n          onPressEnter={onBlurInput}\r\n          style={{ width: 78 }}\r\n        />\r\n      ) : (\r\n        <Tag color=\"blue\" onClick={showInput}>\r\n          <PlusOutlined />\r\n          {' 추가'}\r\n        </Tag>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagForm;\r\n"]},"metadata":{},"sourceType":"module"}