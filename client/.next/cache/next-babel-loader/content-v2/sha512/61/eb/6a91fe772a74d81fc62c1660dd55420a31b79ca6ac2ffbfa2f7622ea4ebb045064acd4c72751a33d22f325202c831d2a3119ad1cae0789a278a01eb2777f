{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Avatar, Typography } from 'antd';\nimport styled from '@emotion/styled';\n// interface AvatarWrapperProps {\n//   src: string;\n//   size: number;\n//   marginRight: number;\n//   theme?: Theme | undefined;\n// }\nvar AvatarWrapper = styled(Avatar)(_templateObject(), function (_ref) {\n  var marginRight = _ref.marginRight;\n  return marginRight && \"margin-right: \".concat(marginRight, \"px;\");\n});\nvar Text = Typography.Text,\n    Title = Typography.Title;\n\nvar UserAvatar = function UserAvatar(_ref2) {\n  var userData = _ref2.userData,\n      _ref2$marginRight = _ref2.marginRight,\n      marginRight = _ref2$marginRight === void 0 ? 0 : _ref2$marginRight,\n      _ref2$size = _ref2.size,\n      size = _ref2$size === void 0 ? 'default' : _ref2$size,\n      _ref2$type = _ref2.type,\n      type = _ref2$type === void 0 ? 'text' : _ref2$type,\n      _ref2$level = _ref2.level,\n      level = _ref2$level === void 0 ? 3 : _ref2$level,\n      _ref2$visibleNickname = _ref2.visibleNickname,\n      visibleNickname = _ref2$visibleNickname === void 0 ? true : _ref2$visibleNickname;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(AvatarWrapper, {\n      src: userData.profile && \"http://localhost:3100/\".concat(userData.profile),\n      size: size // @ts-ignore\n      ,\n      marginRight: marginRight,\n      children: !userData.profile && userData.nickname[0]\n    }), type === 'text' && visibleNickname && /*#__PURE__*/_jsx(Text, {\n      children: userData.nickname\n    }), type === 'title' && visibleNickname && /*#__PURE__*/_jsx(Title, {\n      level: level,\n      style: {\n        display: 'inline-block'\n      },\n      children: userData.nickname\n    })]\n  });\n};\n\nexport default UserAvatar;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/UserAvatar.tsx"],"names":["React","Avatar","Typography","styled","AvatarWrapper","marginRight","Text","Title","UserAvatar","userData","size","type","level","visibleNickname","profile","nickname","display"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMC,aAAa,GAAGD,MAAM,CAACF,MAAD,CAAT,oBACf;AAAA,MAAGI,WAAH,QAAGA,WAAH;AAAA,SAA8CA,WAAW,4BAAqBA,WAArB,QAAzD;AAAA,CADe,CAAnB;IAIQC,I,GAAgBJ,U,CAAhBI,I;IAAMC,K,GAAUL,U,CAAVK,K;;AAWd,IAAMC,UAAU,GAAG,SAAbA,UAAa,QAON;AAAA,MANXC,QAMW,SANXA,QAMW;AAAA,gCALXJ,WAKW;AAAA,MALXA,WAKW,kCALG,CAKH;AAAA,yBAJXK,IAIW;AAAA,MAJXA,IAIW,2BAJJ,SAII;AAAA,yBAHXC,IAGW;AAAA,MAHXA,IAGW,2BAHJ,MAGI;AAAA,0BAFXC,KAEW;AAAA,MAFXA,KAEW,4BAFH,CAEG;AAAA,oCADXC,eACW;AAAA,MADXA,eACW,sCADO,IACP;AACX,sBACE;AAAA,4BACE,KAAC,aAAD;AACE,MAAA,GAAG,EAAEJ,QAAQ,CAACK,OAAT,oCAA6CL,QAAQ,CAACK,OAAtD,CADP;AAEE,MAAA,IAAI,EAAEJ,IAFR,CAGE;AAHF;AAIE,MAAA,WAAW,EAAEL,WAJf;AAAA,gBAMG,CAACI,QAAQ,CAACK,OAAV,IAAqBL,QAAQ,CAACM,QAAT,CAAkB,CAAlB;AANxB,MADF,EASGJ,IAAI,KAAK,MAAT,IAAmBE,eAAnB,iBAAsC,KAAC,IAAD;AAAA,gBAAOJ,QAAQ,CAACM;AAAhB,MATzC,EAUGJ,IAAI,KAAK,OAAT,IAAoBE,eAApB,iBACC,KAAC,KAAD;AAAO,MAAA,KAAK,EAAED,KAAd;AAAqB,MAAA,KAAK,EAAE;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAA5B;AAAA,gBACGP,QAAQ,CAACM;AADZ,MAXJ;AAAA,IADF;AAkBD,CA1BD;;AA4BA,eAAeP,UAAf","sourcesContent":["import React from 'react';\r\nimport { Avatar, Typography } from 'antd';\r\nimport styled from '@emotion/styled';\r\nimport { IUser } from '@typings/IUser';\r\nimport { AvatarSize } from 'antd/lib/avatar/SizeContext';\r\nimport { AvatarProps } from 'antd/lib/skeleton/Avatar';\r\n\r\n// interface AvatarWrapperProps {\r\n//   src: string;\r\n//   size: number;\r\n//   marginRight: number;\r\n//   theme?: Theme | undefined;\r\n// }\r\n\r\nconst AvatarWrapper = styled(Avatar)`\r\n  ${({ marginRight }: { marginRight: number }) => marginRight && `margin-right: ${marginRight}px;`}\r\n`;\r\n\r\nconst { Text, Title } = Typography;\r\n\r\ninterface Props {\r\n  userData: IUser;\r\n  marginRight?: number;\r\n  size?: AvatarSize;\r\n  type?: string;\r\n  level?: 5 | 1 | 2 | 3 | 4;\r\n  visibleNickname?: boolean;\r\n}\r\n\r\nconst UserAvatar = ({\r\n  userData,\r\n  marginRight = 0,\r\n  size = 'default',\r\n  type = 'text',\r\n  level = 3,\r\n  visibleNickname = true,\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      <AvatarWrapper\r\n        src={userData.profile && `http://localhost:3100/${userData.profile}`}\r\n        size={size}\r\n        // @ts-ignore\r\n        marginRight={marginRight}\r\n      >\r\n        {!userData.profile && userData.nickname[0]}\r\n      </AvatarWrapper>\r\n      {type === 'text' && visibleNickname && <Text>{userData.nickname}</Text>}\r\n      {type === 'title' && visibleNickname && (\r\n        <Title level={level} style={{ display: 'inline-block' }}>\r\n          {userData.nickname}\r\n        </Title>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserAvatar;\r\n"]},"metadata":{},"sourceType":"module"}