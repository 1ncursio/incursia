{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\components\\\\CommentSection\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Avatar, List, Modal, Tooltip } from 'antd';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport React, { useCallback, useState } from 'react'; // @ts-ignore\n\nimport { useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport useSWR from 'swr';\nimport { fetcher } from '@utils/fetcher';\nimport CommentContent from '@components/CommentContent';\nimport CommentForm from '@components/CommentForm';\nimport CommentWrapper from '@components/CommentSection/styles';\nimport { REMOVE_COMMENT_REQUEST } from '../../reducers/post'; // dayjs.locale('ko');\n\ndayjs.extend(relativeTime);\n\nvar CommentSection = function CommentSection(_ref) {\n  _s();\n\n  var postData = _ref.postData,\n      postMutate = _ref.postMutate;\n  var dispatch = useDispatch();\n\n  var _useState = useState(-1),\n      replyId = _useState[0],\n      setReplyId = _useState[1];\n\n  var _useSWR = useSWR('/api/user', fetcher),\n      userData = _useSWR.data;\n\n  var toggleReplyForm = useCallback(function (id) {\n    console.log('toggleReplyForm called');\n\n    if (id !== replyId) {\n      setReplyId(id);\n      console.log(\"\".concat(id, \" !== \").concat(replyId));\n    } else {\n      setReplyId(-1);\n      console.log(\"\".concat(id, \" === \").concat(replyId));\n    }\n  }, [replyId]);\n  var onDeleteComment = useCallback(function (commentId) {\n    Modal.confirm({\n      content: '정말로 이 댓글을 삭제하시겠어요?',\n      okText: '삭제',\n      cancelText: '취소',\n      onOk: function onOk() {\n        dispatch({\n          type: REMOVE_COMMENT_REQUEST,\n          data: commentId\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n      placeholder: \"\\uB313\\uAE00 \\uB2EC\\uAE30\",\n      type: \"comment\",\n      setReplyId: setReplyId,\n      postData: postData,\n      postMutate: postMutate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this), (postData === null || postData === void 0 ? void 0 : postData.Comments) && /*#__PURE__*/_jsxDEV(List, {\n      header: \"\".concat(postData.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n      itemLayout: \"horizontal\",\n      dataSource: postData.Comments,\n      renderItem: function renderItem(item) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(CommentWrapper, {\n            nested: +(item.id !== item.replyId),\n            actions: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: function onClick() {\n                return toggleReplyForm(item.id);\n              },\n              children: \"\\uB2F5\\uAE00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"\\uC0AD\\uC81C\",\n              children: item.User.id === (userData === null || userData === void 0 ? void 0 : userData.id) && /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                onClick: function onClick() {\n                  return onDeleteComment(item.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 55\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, _this)],\n            author: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/user/\".concat(item.User.id, \"/illustration\"),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: item.User.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, _this),\n            avatar: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/user/\".concat(item.User.id, \"/illustration\"),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: item.User.profile && \"http://localhost:3100/\".concat(item.User.profile),\n                  children: !item.User.profile && item.User.nickname[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, _this),\n            datetime: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: dayjs(item.createdAt).format('YYYY년 MM월 DD일 HH:mm'),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: dayjs(item.createdAt).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, _this),\n            content: /*#__PURE__*/_jsxDEV(CommentContent, {\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 26\n            }, _this),\n            children: replyId === item.id && /*#__PURE__*/_jsxDEV(CommentForm, {\n              placeholder: \"\\uB2F5\\uAE00 \\uB2EC\\uAE30\",\n              type: \"reply\",\n              setReplyId: setReplyId,\n              replyId: replyId,\n              postData: postData,\n              postMutate: postMutate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(CommentSection, \"sgumAwAdt3wWFJChZgeKanDAaTg=\", false, function () {\n  return [useDispatch, useSWR];\n});\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/CommentSection/index.tsx"],"names":["Avatar","List","Modal","Tooltip","dayjs","relativeTime","React","useCallback","useState","useDispatch","Link","DeleteOutlined","useSWR","fetcher","CommentContent","CommentForm","CommentWrapper","REMOVE_COMMENT_REQUEST","extend","CommentSection","postData","postMutate","dispatch","replyId","setReplyId","userData","data","toggleReplyForm","id","console","log","onDeleteComment","commentId","confirm","content","okText","cancelText","onOk","type","Comments","length","item","User","nickname","profile","createdAt","format","fromNow"],"mappings":"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","sourcesContent":["import { Avatar, List, Modal, Tooltip } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/ko';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport React, { useCallback, useState } from 'react';\r\n// @ts-ignore\r\nimport { useDispatch } from 'react-redux';\r\nimport Link from 'next/link';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport useSWR from 'swr';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport CommentContent from '@components/CommentContent';\r\nimport { IPost } from '@typings/IPost';\r\nimport CommentForm from '@components/CommentForm';\r\nimport CommentWrapper from '@components/CommentSection/styles';\r\nimport { REMOVE_COMMENT_REQUEST } from '../../reducers/post';\r\n\r\n// dayjs.locale('ko');\r\ndayjs.extend(relativeTime);\r\n\r\ninterface Props {\r\n  postData: IPost;\r\n  postMutate: any;\r\n}\r\n\r\nconst CommentSection = ({ postData, postMutate }: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [replyId, setReplyId] = useState(-1);\r\n\r\n  const { data: userData } = useSWR('/api/user', fetcher);\r\n\r\n  const toggleReplyForm = useCallback(\r\n    (id) => {\r\n      console.log('toggleReplyForm called');\r\n      if (id !== replyId) {\r\n        setReplyId(id);\r\n        console.log(`${id} !== ${replyId}`);\r\n      } else {\r\n        setReplyId(-1);\r\n        console.log(`${id} === ${replyId}`);\r\n      }\r\n    },\r\n    [replyId],\r\n  );\r\n\r\n  const onDeleteComment = useCallback((commentId) => {\r\n    Modal.confirm({\r\n      content: '정말로 이 댓글을 삭제하시겠어요?',\r\n      okText: '삭제',\r\n      cancelText: '취소',\r\n      onOk: () => {\r\n        dispatch({\r\n          type: REMOVE_COMMENT_REQUEST,\r\n          data: commentId,\r\n        });\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CommentForm\r\n        placeholder=\"댓글 달기\"\r\n        type=\"comment\"\r\n        setReplyId={setReplyId}\r\n        postData={postData}\r\n        postMutate={postMutate}\r\n      />\r\n      {postData?.Comments && (\r\n        <List\r\n          header={`${postData.Comments.length}개의 댓글`}\r\n          itemLayout=\"horizontal\"\r\n          dataSource={postData.Comments}\r\n          renderItem={(item) => (\r\n            <li>\r\n              <CommentWrapper\r\n                nested={+(item.id !== item.replyId)}\r\n                actions={[\r\n                  <span onClick={() => toggleReplyForm(item.id)}>답글</span>,\r\n                  <Tooltip title=\"삭제\">\r\n                    {item.User.id === userData?.id && <DeleteOutlined onClick={() => onDeleteComment(item.id)} />}\r\n                  </Tooltip>,\r\n                ]}\r\n                author={\r\n                  <Link href={`/user/${item.User.id}/illustration`}>\r\n                    <a>{item.User.nickname}</a>\r\n                  </Link>\r\n                }\r\n                avatar={\r\n                  <Link href={`/user/${item.User.id}/illustration`}>\r\n                    <a>\r\n                      <Avatar src={item.User.profile && `http://localhost:3100/${item.User.profile}`}>\r\n                        {!item.User.profile && item.User.nickname[0]}\r\n                      </Avatar>\r\n                    </a>\r\n                  </Link>\r\n                }\r\n                datetime={\r\n                  <Tooltip title={dayjs(item.createdAt).format('YYYY년 MM월 DD일 HH:mm')}>\r\n                    <span>{dayjs(item.createdAt).fromNow()}</span>\r\n                  </Tooltip>\r\n                }\r\n                content={<CommentContent content={item.content} />}\r\n              >\r\n                {replyId === item.id && (\r\n                  <CommentForm\r\n                    placeholder=\"답글 달기\"\r\n                    type=\"reply\"\r\n                    setReplyId={setReplyId}\r\n                    replyId={replyId}\r\n                    postData={postData}\r\n                    postMutate={postMutate}\r\n                  />\r\n                )}\r\n              </CommentWrapper>\r\n            </li>\r\n          )}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n"]},"metadata":{},"sourceType":"module"}