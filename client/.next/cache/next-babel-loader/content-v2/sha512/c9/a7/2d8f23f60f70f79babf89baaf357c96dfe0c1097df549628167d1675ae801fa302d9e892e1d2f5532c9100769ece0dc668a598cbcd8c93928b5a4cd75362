{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect, useState } from 'react'; // @ts-ignore\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\nimport { fetcher } from '@utils/fetcher';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton = ({\n  postData\n}) => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    0: isFollowing,\n    1: setIsFollowing\n  } = useState(false);\n  const {\n    data: userData,\n    mutate: userMutate\n  } = useSWR('/api/user', fetcher);\n  const {\n    followLoading,\n    unfollowLoading,\n    followDone,\n    unfollowDone\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (userData) {\n      setIsFollowing(userData.Followings.find(v => v.id === postData.User.id));\n      console.log('isFollowing', isFollowing);\n    }\n  }, [userData]);\n  useEffect(() => {\n    if (followDone) {\n      userMutate(_objectSpread(_objectSpread({}, userData), {}, {\n        Followings: [...userData.Followings, {\n          id: postData.User.id\n        }]\n      }));\n    }\n  }, [followDone]);\n  useEffect(() => {\n    if (unfollowDone) {\n      userMutate(_objectSpread(_objectSpread({}, userData), {}, {\n        Followings: userData.Followings.filter(v => v.id !== postData.User.id)\n      }));\n    }\n  }, [unfollowDone]);\n  const onClickButton = useCallback(() => {\n    if (!isFollowing) {\n      if (userData) {\n        dispatch({\n          type: FOLLOW_REQUEST,\n          data: postData.User.id\n        });\n      } else {\n        router.push('/login');\n      }\n    } else {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: postData.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (postData.User.id === (userData === null || userData === void 0 ? void 0 : userData.id)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    type: isFollowing ? 'default' : 'primary',\n    shape: \"round\",\n    block: true,\n    children: isFollowing ? '팔로우 중' : '팔로우 하기'\n  });\n};\n\nexport default FollowButton;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/FollowButton.tsx"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Button","useSWR","useRouter","fetcher","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","postData","dispatch","router","isFollowing","setIsFollowing","data","userData","mutate","userMutate","followLoading","unfollowLoading","followDone","unfollowDone","state","user","Followings","find","v","id","User","console","log","filter","onClickButton","type","push"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAGA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;AAMA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAC5C,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACQ,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM;AAAEe,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA,MAAM,EAAEC;AAA1B,MAAyCd,MAAM,CAAC,WAAD,EAAcE,OAAd,CAArD;AAEA,QAAM;AAAEa,IAAAA,aAAF;AAAiBC,IAAAA,eAAjB;AAAkCC,IAAAA,UAAlC;AAA8CC,IAAAA;AAA9C,MAA+DpB,WAAW,CAAEqB,KAAD,IAAgBA,KAAK,CAACC,IAAvB,CAAhF;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,QAAJ,EAAc;AACZF,MAAAA,cAAc,CAACE,QAAQ,CAACS,UAAT,CAAoBC,IAApB,CAA0BC,CAAD,IAAcA,CAAC,CAACC,EAAF,KAASlB,QAAQ,CAACmB,IAAT,CAAcD,EAA9D,CAAD,CAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BlB,WAA3B;AACD;AACF,GALQ,EAKN,CAACG,QAAD,CALM,CAAT;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,UAAJ,EAAgB;AACdH,MAAAA,UAAU,iCACLF,QADK;AAERS,QAAAA,UAAU,EAAE,CACV,GAAGT,QAAQ,CAACS,UADF,EAEV;AACEG,UAAAA,EAAE,EAAElB,QAAQ,CAACmB,IAAT,CAAcD;AADpB,SAFU;AAFJ,SAAV;AASD;AACF,GAZQ,EAYN,CAACP,UAAD,CAZM,CAAT;AAcAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,YAAJ,EAAkB;AAChBJ,MAAAA,UAAU,iCACLF,QADK;AAERS,QAAAA,UAAU,EAAET,QAAQ,CAACS,UAAT,CAAoBO,MAApB,CAA4BL,CAAD,IAAcA,CAAC,CAACC,EAAF,KAASlB,QAAQ,CAACmB,IAAT,CAAcD,EAAhE;AAFJ,SAAV;AAID;AACF,GAPQ,EAON,CAACN,YAAD,CAPM,CAAT;AASA,QAAMW,aAAa,GAAGnC,WAAW,CAAC,MAAM;AACtC,QAAI,CAACe,WAAL,EAAkB;AAChB,UAAIG,QAAJ,EAAc;AACZL,QAAAA,QAAQ,CAAC;AACPuB,UAAAA,IAAI,EAAE3B,cADC;AAEPQ,UAAAA,IAAI,EAAEL,QAAQ,CAACmB,IAAT,CAAcD;AAFb,SAAD,CAAR;AAID,OALD,MAKO;AACLhB,QAAAA,MAAM,CAACuB,IAAP,CAAY,QAAZ;AACD;AACF,KATD,MASO;AACLxB,MAAAA,QAAQ,CAAC;AACPuB,QAAAA,IAAI,EAAE1B,gBADC;AAEPO,QAAAA,IAAI,EAAEL,QAAQ,CAACmB,IAAT,CAAcD;AAFb,OAAD,CAAR;AAID;AACF,GAhBgC,EAgB9B,CAACf,WAAD,CAhB8B,CAAjC;;AAkBA,MAAIH,QAAQ,CAACmB,IAAT,CAAcD,EAAd,MAAqBZ,QAArB,aAAqBA,QAArB,uBAAqBA,QAAQ,CAAEY,EAA/B,CAAJ,EAAuC;AACrC,WAAO,IAAP;AACD;;AACD,sBACE,KAAC,MAAD;AACE,IAAA,OAAO,EAAET,aAAa,IAAIC,eAD5B;AAEE,IAAA,OAAO,EAAEa,aAFX;AAGE,IAAA,IAAI,EAAEpB,WAAW,GAAG,SAAH,GAAe,SAHlC;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,KAAK,MALP;AAAA,cAOGA,WAAW,GAAG,OAAH,GAAa;AAP3B,IADF;AAWD,CAxED;;AA0EA,eAAeJ,YAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\n// @ts-ignore\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from 'antd';\r\nimport useSWR from 'swr';\r\nimport { useRouter } from 'next/router';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport { IPost } from '@typings/IPost';\r\nimport { IUser } from '@typings/IUser';\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\ninterface Props {\r\n  postData: IPost;\r\n}\r\n\r\nconst FollowButton = ({ postData }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n\r\n  const [isFollowing, setIsFollowing] = useState(false);\r\n\r\n  const { data: userData, mutate: userMutate } = useSWR('/api/user', fetcher);\r\n\r\n  const { followLoading, unfollowLoading, followDone, unfollowDone } = useSelector((state: any) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      setIsFollowing(userData.Followings.find((v: IUser) => v.id === postData.User.id));\r\n      console.log('isFollowing', isFollowing);\r\n    }\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    if (followDone) {\r\n      userMutate({\r\n        ...userData,\r\n        Followings: [\r\n          ...userData.Followings,\r\n          {\r\n            id: postData.User.id,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }, [followDone]);\r\n\r\n  useEffect(() => {\r\n    if (unfollowDone) {\r\n      userMutate({\r\n        ...userData,\r\n        Followings: userData.Followings.filter((v: IUser) => v.id !== postData.User.id),\r\n      });\r\n    }\r\n  }, [unfollowDone]);\r\n\r\n  const onClickButton = useCallback(() => {\r\n    if (!isFollowing) {\r\n      if (userData) {\r\n        dispatch({\r\n          type: FOLLOW_REQUEST,\r\n          data: postData.User.id,\r\n        });\r\n      } else {\r\n        router.push('/login');\r\n      }\r\n    } else {\r\n      dispatch({\r\n        type: UNFOLLOW_REQUEST,\r\n        data: postData.User.id,\r\n      });\r\n    }\r\n  }, [isFollowing]);\r\n\r\n  if (postData.User.id === userData?.id) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Button\r\n      loading={followLoading || unfollowLoading}\r\n      onClick={onClickButton}\r\n      type={isFollowing ? 'default' : 'primary'}\r\n      shape=\"round\"\r\n      block\r\n    >\r\n      {isFollowing ? '팔로우 중' : '팔로우 하기'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default FollowButton;\r\n"]},"metadata":{},"sourceType":"module"}