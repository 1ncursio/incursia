{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Col, Row } from 'antd';\nimport React, { useCallback } from 'react';\nimport useSWR from 'swr';\nimport { fetcher } from '@utils/fetcher';\n\nconst PopoverEmoticon = ({\n  setCommentText,\n  setVisiblePopover\n}) => {\n  const {\n    data: emoticonData\n  } = useSWR('/api/emoticon', fetcher);\n  const onClickEmoticon = useCallback(emoticon => {\n    setCommentText(`:${emoticon.name}:`);\n    setVisiblePopover(false);\n  }, [emoticonData]);\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: [16, 16],\n    style: {\n      width: 500\n    },\n    children: emoticonData === null || emoticonData === void 0 ? void 0 : emoticonData.map(emoticon => /*#__PURE__*/_jsx(Col, {\n      span: 6,\n      children: /*#__PURE__*/_jsx(\"a\", {\n        onClick: () => onClickEmoticon(emoticon),\n        children: /*#__PURE__*/_jsx(\"img\", {\n          alt: emoticon.name,\n          src: `http://localhost:3100/${emoticon.src}`,\n          style: {\n            width: '100%'\n          }\n        })\n      })\n    }))\n  });\n};\n\nexport default PopoverEmoticon;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/PopoverEmoticon/index.tsx"],"names":["Col","Row","React","useCallback","useSWR","fetcher","PopoverEmoticon","setCommentText","setVisiblePopover","data","emoticonData","onClickEmoticon","emoticon","name","width","map","src"],"mappings":";AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AAEA,OAAOC,KAAP,IAAgBC,WAAhB,QAA6D,OAA7D;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAQA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAAkD;AACxE,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAyBN,MAAM,CAAc,eAAd,EAA+BC,OAA/B,CAArC;AAEA,QAAMM,eAAe,GAAGR,WAAW,CAChCS,QAAD,IAAc;AACZL,IAAAA,cAAc,CAAE,IAAGK,QAAQ,CAACC,IAAK,GAAnB,CAAd;AACAL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAJgC,EAKjC,CAACE,YAAD,CALiC,CAAnC;AAQA,sBACE,KAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAuB,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAA9B;AAAA,cACGJ,YADH,aACGA,YADH,uBACGA,YAAY,CAAEK,GAAd,CAAmBH,QAAD,iBACjB,KAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA,6BACE;AAAG,QAAA,OAAO,EAAE,MAAMD,eAAe,CAACC,QAAD,CAAjC;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEA,QAAQ,CAACC,IAAnB;AAAyB,UAAA,GAAG,EAAG,yBAAwBD,QAAQ,CAACI,GAAI,EAApE;AAAuE,UAAA,KAAK,EAAE;AAAEF,YAAAA,KAAK,EAAE;AAAT;AAA9E;AADF;AADF,MADD;AADH,IADF;AAWD,CAtBD;;AAwBA,eAAeR,eAAf","sourcesContent":["import { Col, Row } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useCallback, Dispatch, SetStateAction } from 'react';\r\nimport useSWR from 'swr';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport { IEmoticon } from '@typings/IEmoticon';\r\n\r\ninterface Props {\r\n  setCommentText: Dispatch<SetStateAction<string>>;\r\n  setVisiblePopover: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst PopoverEmoticon = ({ setCommentText, setVisiblePopover }: Props) => {\r\n  const { data: emoticonData } = useSWR<IEmoticon[]>('/api/emoticon', fetcher);\r\n\r\n  const onClickEmoticon = useCallback(\r\n    (emoticon) => {\r\n      setCommentText(`:${emoticon.name}:`);\r\n      setVisiblePopover(false);\r\n    },\r\n    [emoticonData],\r\n  );\r\n\r\n  return (\r\n    <Row gutter={[16, 16]} style={{ width: 500 }}>\r\n      {emoticonData?.map((emoticon) => (\r\n        <Col span={6}>\r\n          <a onClick={() => onClickEmoticon(emoticon)}>\r\n            <img alt={emoticon.name} src={`http://localhost:3100/${emoticon.src}`} style={{ width: '100%' }} />\r\n          </a>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PopoverEmoticon;\r\n"]},"metadata":{},"sourceType":"module"}