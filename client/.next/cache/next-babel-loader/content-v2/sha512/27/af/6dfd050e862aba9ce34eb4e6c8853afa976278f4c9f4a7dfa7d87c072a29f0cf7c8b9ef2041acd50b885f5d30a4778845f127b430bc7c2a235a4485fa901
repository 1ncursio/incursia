{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\components\\\\IllustCard.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Image, Typography, Tag, Modal, Tooltip, Space } from 'antd';\nimport Link from 'next/link';\nimport Router, { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HeartOutlined, ShareAltOutlined, DeleteOutlined, AlertOutlined, HeartFilled, EyeFilled } from '@ant-design/icons';\nimport moment from 'moment';\nimport useSWR from 'swr';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, DISLIKE_POST_REQUEST } from '../reducers/post';\nimport { fetcher } from '@utils/fetcher';\nimport styled from 'styled-components';\nmoment.locale('ko');\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\nconst PostContent = styled.div.withConfig({\n  displayName: \"IllustCard__PostContent\",\n  componentId: \"sc-1ewoq5x-0\"\n})([\"margin:32px 0 48px 0;\"]);\n\nconst IllustCard = ({\n  postData\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    data: userData,\n    error: userError\n  } = useSWR('/api/user', fetcher);\n  const {\n    removePostDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (userData) setLiked(postData.Likers.find(v => v.id === (userData === null || userData === void 0 ? void 0 : userData.id)));\n  }, [userData]);\n  const onLike = useCallback(() => {\n    if (!userData) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: postData.id\n    });\n    setLiked(prev => !prev);\n  }, [userData, postData === null || postData === void 0 ? void 0 : postData.id]);\n  const onDislike = useCallback(() => {\n    if (!userData) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    dispatch({\n      type: DISLIKE_POST_REQUEST,\n      data: postData.id\n    });\n    setLiked(prev => !prev);\n  }, [userData, postData === null || postData === void 0 ? void 0 : postData.id]);\n  const onClickDelete = useCallback(() => {\n    // 로그인 안 한 경우\n    if (!userData) {\n      return Modal.error({\n        content: '로그인이 필요합니다.',\n        okText: '확인'\n      });\n    }\n\n    Modal.confirm({\n      title: '글 삭제',\n      content: '정말로 이 글을 삭제하시겠어요?',\n      okText: '삭제',\n      cancelText: '취소',\n      onOk: () => {\n        dispatch({\n          type: REMOVE_POST_REQUEST,\n          data: postData.id\n        });\n      }\n    });\n  }, [userData, postData === null || postData === void 0 ? void 0 : postData.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Image.PreviewGroup, {\n      children: postData === null || postData === void 0 ? void 0 : postData.Images.map(v => /*#__PURE__*/_jsxDEV(Image, {\n        width: \"100%\",\n        src: `http://localhost:3100/${v.src}`\n      }, v.src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        float: 'right'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"\\uC88B\\uC544\\uC694!\",\n        children: liked ? /*#__PURE__*/_jsxDEV(HeartFilled, {\n          style: {\n            fontSize: 24,\n            opacity: 0.9\n          },\n          onClick: onDislike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n          style: {\n            fontSize: 24,\n            opacity: 0.9\n          },\n          onClick: onLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"\\uACF5\\uC720\\uD558\\uAE30!\",\n        children: /*#__PURE__*/_jsxDEV(ShareAltOutlined, {\n          style: {\n            fontSize: 24,\n            opacity: 0.9\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"\\uC2E0\\uACE0\\uD558\\uAE30\",\n        children: /*#__PURE__*/_jsxDEV(AlertOutlined, {\n          style: {\n            fontSize: 24,\n            opacity: 0.9\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), (userData === null || userData === void 0 ? void 0 : userData.id) === (postData === null || postData === void 0 ? void 0 : postData.User.id) ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"\\uC0AD\\uC81C\\uD558\\uAE30\",\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n          style: {\n            fontSize: 24\n          },\n          onClick: onClickDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 3,\n        children: postData === null || postData === void 0 ? void 0 : postData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        children: postData === null || postData === void 0 ? void 0 : postData.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: postData === null || postData === void 0 ? void 0 : postData.Tags.map(tag => /*#__PURE__*/_jsxDEV(Link, {\n          href: `/tag/${encodeURIComponent(tag.name)}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"blue\",\n              children: tag.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, tag.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        size: \"middle\",\n        style: {\n          margin: '16px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(HeartFilled, {\n            style: {\n              opacity: 0.45,\n              padding: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            type: \"secondary\",\n            style: {\n              fontSize: '0.8rem'\n            },\n            children: postData === null || postData === void 0 ? void 0 : postData.Likers.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(EyeFilled, {\n            style: {\n              opacity: 0.45,\n              padding: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            type: \"secondary\",\n            style: {\n              fontSize: '0.8rem'\n            },\n            children: postData === null || postData === void 0 ? void 0 : postData.views\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          type: \"secondary\",\n          children: moment(postData === null || postData === void 0 ? void 0 : postData.createdAt).format('YYYY년 MM월 DD일 HH:mm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default IllustCard;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/components/IllustCard.js"],"names":["React","useCallback","useEffect","useState","Image","Typography","Tag","Modal","Tooltip","Space","Link","Router","useRouter","useDispatch","useSelector","HeartOutlined","ShareAltOutlined","DeleteOutlined","AlertOutlined","HeartFilled","EyeFilled","moment","useSWR","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","DISLIKE_POST_REQUEST","fetcher","styled","locale","Title","Paragraph","Text","PostContent","div","IllustCard","postData","dispatch","liked","setLiked","data","userData","error","userError","removePostDone","state","post","Likers","find","v","id","onLike","alert","type","prev","onDislike","onClickDelete","content","okText","confirm","title","cancelText","onOk","Images","map","src","float","fontSize","opacity","User","caption","Tags","tag","encodeURIComponent","name","margin","padding","length","views","createdAt","format"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Image, Typography, Tag, Modal, Tooltip, Space } from 'antd';\r\nimport Link from 'next/link';\r\nimport Router, { useRouter } from 'next/router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { HeartOutlined, ShareAltOutlined, DeleteOutlined, AlertOutlined, HeartFilled, EyeFilled } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport useSWR from 'swr';\r\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, DISLIKE_POST_REQUEST } from '../reducers/post';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport styled from 'styled-components';\r\n\r\nmoment.locale('ko');\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst PostContent = styled.div`\r\n  margin: 32px 0 48px 0;\r\n`;\r\n\r\nconst IllustCard = ({ postData }) => {\r\n  const dispatch = useDispatch();\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const { data: userData, error: userError } = useSWR('/api/user', fetcher);\r\n\r\n  const { removePostDone } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    if (userData) setLiked(postData.Likers.find((v) => v.id === userData?.id));\r\n  }, [userData]);\r\n\r\n  const onLike = useCallback(() => {\r\n    if (!userData) {\r\n      return alert('로그인이 필요합니다.');\r\n    }\r\n    dispatch({ type: LIKE_POST_REQUEST, data: postData.id });\r\n    setLiked((prev) => !prev);\r\n  }, [userData, postData?.id]);\r\n\r\n  const onDislike = useCallback(() => {\r\n    if (!userData) {\r\n      return alert('로그인이 필요합니다.');\r\n    }\r\n    dispatch({ type: DISLIKE_POST_REQUEST, data: postData.id });\r\n    setLiked((prev) => !prev);\r\n  }, [userData, postData?.id]);\r\n\r\n  const onClickDelete = useCallback(() => {\r\n    // 로그인 안 한 경우\r\n    if (!userData) {\r\n      return Modal.error({\r\n        content: '로그인이 필요합니다.',\r\n        okText: '확인',\r\n      });\r\n    }\r\n\r\n    Modal.confirm({\r\n      title: '글 삭제',\r\n      content: '정말로 이 글을 삭제하시겠어요?',\r\n      okText: '삭제',\r\n      cancelText: '취소',\r\n      onOk: () => {\r\n        dispatch({\r\n          type: REMOVE_POST_REQUEST,\r\n          data: postData.id,\r\n        });\r\n      },\r\n    });\r\n  }, [userData, postData?.id]);\r\n\r\n  return (\r\n    <>\r\n      <Image.PreviewGroup>\r\n        {postData?.Images.map((v) => (\r\n          <Image width=\"100%\" key={v.src} src={`http://localhost:3100/${v.src}`} />\r\n        ))}\r\n      </Image.PreviewGroup>\r\n      <Space style={{ float: 'right' }}>\r\n        <Tooltip title=\"좋아요!\">\r\n          {liked ? (\r\n            <HeartFilled style={{ fontSize: 24, opacity: 0.9 }} onClick={onDislike} />\r\n          ) : (\r\n            <HeartOutlined style={{ fontSize: 24, opacity: 0.9 }} onClick={onLike} />\r\n          )}\r\n        </Tooltip>\r\n        <Tooltip title=\"공유하기!\">\r\n          <ShareAltOutlined style={{ fontSize: 24, opacity: 0.9 }} />\r\n        </Tooltip>\r\n        <Tooltip title=\"신고하기\">\r\n          <AlertOutlined style={{ fontSize: 24, opacity: 0.9 }} />\r\n        </Tooltip>\r\n\r\n        {userData?.id === postData?.User.id ? (\r\n          <Tooltip title=\"삭제하기\">\r\n            <DeleteOutlined style={{ fontSize: 24 }} onClick={onClickDelete} />\r\n          </Tooltip>\r\n        ) : null}\r\n      </Space>\r\n      <PostContent>\r\n        <Title level={3}>{postData?.title}</Title>\r\n        <Paragraph>{postData?.caption}</Paragraph>\r\n        <div>\r\n          {postData?.Tags.map((tag) => (\r\n            <Link href={`/tag/${encodeURIComponent(tag.name)}`} key={tag.name}>\r\n              <a>\r\n                <Tag color=\"blue\">{tag.name}</Tag>\r\n              </a>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        <Space size=\"middle\" style={{ margin: '16px 0' }}>\r\n          <span>\r\n            <HeartFilled style={{ opacity: 0.45, padding: 4 }} />\r\n            <Text type=\"secondary\" style={{ fontSize: '0.8rem' }}>\r\n              {postData?.Likers.length}\r\n            </Text>\r\n          </span>\r\n          <span>\r\n            <EyeFilled style={{ opacity: 0.45, padding: 4 }} />\r\n            <Text type=\"secondary\" style={{ fontSize: '0.8rem' }}>\r\n              {postData?.views}\r\n            </Text>\r\n          </span>\r\n        </Space>\r\n        <div>\r\n          <Text type=\"secondary\">{moment(postData?.createdAt).format('YYYY년 MM월 DD일 HH:mm')}</Text>\r\n        </div>\r\n      </PostContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IllustCard;\r\n"]},"metadata":{},"sourceType":"module"}