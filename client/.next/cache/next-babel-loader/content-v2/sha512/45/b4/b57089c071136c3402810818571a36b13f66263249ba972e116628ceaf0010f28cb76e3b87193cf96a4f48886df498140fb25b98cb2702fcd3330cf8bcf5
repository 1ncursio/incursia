{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\pages\\\\illustration\\\\[id].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport useSWR from 'swr';\nimport { Col, Row } from 'antd'; // @ts-ignore\n\nimport { useSelector } from 'react-redux';\nimport AppLayout from '@components/AppLayout';\nimport IllustCard from '@components/IllustCard';\nimport { fetcher } from '@utils/fetcher';\nimport UserProfile from '@components/UserProfile';\nimport CommentSection from '@components/CommentSection';\nimport ExpiredValidation from '@components/ExpiredValidation';\nimport wrapper from '../../store/configureStore';\n\nconst Illustration = ({\n  post: initialPost\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    data: postData,\n    mutate: postMutate\n  } = useSWR(`/api/post/${id}`, fetcher, {\n    initialData: initialPost\n  });\n  const {\n    data: userData\n  } = useSWR('/api/user', fetcher);\n  const {\n    removePostDone,\n    likePostDone,\n    dislikePostDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (removePostDone) {\n      Router.replace('/');\n    }\n  }, [removePostDone]);\n  useEffect(() => {\n    if (likePostDone) {\n      postMutate(_objectSpread(_objectSpread({}, postData), {}, {\n        Likers: [...postData.Likers, {\n          id: userData.id\n        }]\n      }), false);\n    }\n  }, [likePostDone]);\n  useEffect(() => {\n    if (dislikePostDone) {\n      postMutate(_objectSpread(_objectSpread({}, postData), {}, {\n        Likers: postData.Likers.filter(v => v.id !== userData.id)\n      }), false);\n    }\n  }, [dislikePostDone]);\n\n  if ((userData === null || userData === void 0 ? void 0 : userData.status) === 'pending') {\n    return /*#__PURE__*/_jsxDEV(ExpiredValidation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [postData.User.nickname, \"\\uB2D8\\uC758 \\uC77C\\uB7EC\\uC2A4\\uD2B8 - \\uC720\\uD1A0\\uD53C\\uC544\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: postData.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"og:title\",\n        content: `${postData.User.nickname}님의 일러스트`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"og:description\",\n        content: postData.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"og:image\",\n        content: postData.Images[0] ? postData.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"og:url\",\n        content: `https://nodebird.com/post/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      gutter: 16,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(IllustCard, {\n          postData: postData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          postData: postData,\n          postMutate: postMutate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 4,\n        children: /*#__PURE__*/_jsxDEV(UserProfile, {\n          postData: postData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  var _context$params;\n\n  // const cookie = context.req ? context.req.headers.cookie : '';\n  // axios.defaults.headers.Cookie = '';\n  // if (context.req && cookie) {\n  //   axios.defaults.headers.Cookie = cookie;\n  // }\n  const post = await fetcher(`/api/post/${(_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.id}`); // const parsedCookie = post.headers['set-cookie'] ? parseCookies(post.headers['set-cookie'][0]) : '';\n  // const { data } = post;\n  // return { props: { post: data, cookie: parsedCookie && parsedCookie } };\n\n  return {\n    props: {\n      post\n    }\n  };\n});\nexport default Illustration;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/pages/illustration/[id].tsx"],"names":["React","useEffect","Router","useRouter","Head","useSWR","Col","Row","useSelector","AppLayout","IllustCard","fetcher","UserProfile","CommentSection","ExpiredValidation","wrapper","Illustration","post","initialPost","router","id","query","data","postData","mutate","postMutate","initialData","userData","removePostDone","likePostDone","dislikePostDone","state","replace","Likers","filter","v","status","User","nickname","caption","Images","src","getServerSideProps","context","params","props"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Router, { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\nimport useSWR from 'swr';\r\nimport { Col, Row } from 'antd';\r\n// @ts-ignore\r\nimport { useSelector } from 'react-redux';\r\nimport AppLayout from '@components/AppLayout';\r\nimport IllustCard from '@components/IllustCard';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport UserProfile from '@components/UserProfile';\r\nimport CommentSection from '@components/CommentSection';\r\nimport { IPost } from '@typings/IPost';\r\nimport { IUser } from '@typings/IUser';\r\nimport ExpiredValidation from '@components/ExpiredValidation';\r\nimport wrapper from '../../store/configureStore';\r\n\r\ninterface Props {\r\n  post: IPost;\r\n}\r\n\r\nconst Illustration = ({ post: initialPost }: Props) => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  const { data: postData, mutate: postMutate } = useSWR(`/api/post/${id}`, fetcher, { initialData: initialPost });\r\n  const { data: userData } = useSWR<IUser>('/api/user', fetcher);\r\n\r\n  const { removePostDone, likePostDone, dislikePostDone } = useSelector((state: any) => state.post);\r\n\r\n  useEffect(() => {\r\n    if (removePostDone) {\r\n      Router.replace('/');\r\n    }\r\n  }, [removePostDone]);\r\n\r\n  useEffect(() => {\r\n    if (likePostDone) {\r\n      postMutate(\r\n        {\r\n          ...postData,\r\n          Likers: [\r\n            ...postData.Likers,\r\n            {\r\n              id: userData.id,\r\n            },\r\n          ],\r\n        },\r\n        false,\r\n      );\r\n    }\r\n  }, [likePostDone]);\r\n\r\n  useEffect(() => {\r\n    if (dislikePostDone) {\r\n      postMutate(\r\n        {\r\n          ...postData,\r\n          Likers: postData.Likers.filter((v: IUser) => v.id !== userData.id),\r\n        },\r\n        false,\r\n      );\r\n    }\r\n  }, [dislikePostDone]);\r\n\r\n  if (userData?.status === 'pending') {\r\n    return <ExpiredValidation />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>{postData.User.nickname}님의 일러스트 - 유토피아</title>\r\n        <meta name=\"description\" content={postData.caption} />\r\n        <meta name=\"og:title\" content={`${postData.User.nickname}님의 일러스트`} />\r\n        <meta name=\"og:description\" content={postData.caption} />\r\n        <meta\r\n          name=\"og:image\"\r\n          content={postData.Images[0] ? postData.Images[0].src : 'https://nodebird.com/favicon.ico'}\r\n        />\r\n        <meta name=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n      </Head>\r\n      <Row justify=\"center\" gutter={16}>\r\n        <Col span={12}>\r\n          <IllustCard postData={postData} />\r\n          <CommentSection postData={postData} postMutate={postMutate} />\r\n        </Col>\r\n        <Col span={4}>\r\n          <UserProfile postData={postData} />\r\n        </Col>\r\n      </Row>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  // const cookie = context.req ? context.req.headers.cookie : '';\r\n  // axios.defaults.headers.Cookie = '';\r\n  // if (context.req && cookie) {\r\n  //   axios.defaults.headers.Cookie = cookie;\r\n  // }\r\n\r\n  const post = await fetcher(`/api/post/${context.params?.id}`);\r\n  // const parsedCookie = post.headers['set-cookie'] ? parseCookies(post.headers['set-cookie'][0]) : '';\r\n  // const { data } = post;\r\n  // return { props: { post: data, cookie: parsedCookie && parsedCookie } };\r\n  return { props: { post } };\r\n});\r\n\r\nexport default Illustration;\r\n"]},"metadata":{},"sourceType":"module"}