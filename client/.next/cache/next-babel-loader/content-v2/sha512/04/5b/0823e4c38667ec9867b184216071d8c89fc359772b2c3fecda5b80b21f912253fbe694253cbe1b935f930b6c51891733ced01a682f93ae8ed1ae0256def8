{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport useSWR from 'swr';\nimport { Col, Row } from 'antd'; // @ts-ignore\n\nimport { useSelector } from 'react-redux';\nimport AppLayout from '@components/AppLayout';\nimport IllustCard from '@components/IllustCard';\nimport { fetcher } from '@utils/fetcher';\nimport produce from 'immer';\nimport UserProfile from '@components/UserProfile';\nimport CommentSection from '@components/CommentSection';\nimport ExpiredValidation from '@components/ExpiredValidation';\n\nvar Illustration = function Illustration(_ref) {\n  var initialPost = _ref.post;\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSWR = useSWR(\"/api/post/\".concat(id), fetcher, {\n    initialData: initialPost\n  }),\n      postData = _useSWR.data,\n      postMutate = _useSWR.mutate;\n\n  var _useSWR2 = useSWR('/api/user', fetcher),\n      userData = _useSWR2.data;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostDone = _useSelector.removePostDone,\n      likePostDone = _useSelector.likePostDone,\n      dislikePostDone = _useSelector.dislikePostDone;\n\n  useEffect(function () {\n    if (removePostDone) {\n      Router.replace('/');\n    }\n  }, [removePostDone]);\n  useEffect(function () {\n    if (likePostDone) {\n      // postMutate(\n      //   {\n      //     ...postData,\n      //     Likers: [\n      //       ...postData.Likers,\n      //       {\n      //         id: userData?.id,\n      //       },\n      //     ],\n      //   },\n      //   false,\n      // );\n      postMutate(produce(function (draft) {\n        draft.Likers.push({\n          id: userData === null || userData === void 0 ? void 0 : userData.id\n        });\n      }), false);\n    }\n  }, [likePostDone]);\n  useEffect(function () {\n    if (dislikePostDone) {\n      // postMutate(\n      //   {\n      //     ...postData,\n      //     Likers: postData.Likers.filter((v: IUser) => v.id !== userData?.id),\n      //   },\n      //   false,\n      // );\n      postMutate(produce(function (draft) {\n        draft.Likers.filter(function (v) {\n          return v.id !== (userData === null || userData === void 0 ? void 0 : userData.id);\n        });\n      }));\n    }\n  }, [dislikePostDone]);\n\n  if ((userData === null || userData === void 0 ? void 0 : userData.status) === 'pending') {\n    return /*#__PURE__*/_jsx(ExpiredValidation, {});\n  }\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [postData && /*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [postData.User.nickname, \"\\uB2D8\\uC758 \\uC77C\\uB7EC\\uC2A4\\uD2B8 - \\uC720\\uD1A0\\uD53C\\uC544\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: postData.caption\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:title\",\n        content: \"\".concat(postData.User.nickname, \"\\uB2D8\\uC758 \\uC77C\\uB7EC\\uC2A4\\uD2B8\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:description\",\n        content: postData.caption\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:image\",\n        content: postData.Images[0] ? postData.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:url\",\n        content: \"https://nodebird.com/post/\".concat(id)\n      })]\n    }), postData && /*#__PURE__*/_jsxs(Row, {\n      justify: \"center\",\n      gutter: 16,\n      children: [/*#__PURE__*/_jsxs(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsx(IllustCard, {\n          postData: postData\n        }), /*#__PURE__*/_jsx(CommentSection, {\n          postData: postData,\n          postMutate: postMutate\n        })]\n      }), /*#__PURE__*/_jsx(Col, {\n        span: 4,\n        children: /*#__PURE__*/_jsx(UserProfile, {\n          postData: postData\n        })\n      })]\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default Illustration;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/pages/illustration/[id].tsx"],"names":["React","useEffect","Router","useRouter","Head","useSWR","Col","Row","useSelector","AppLayout","IllustCard","fetcher","produce","UserProfile","CommentSection","ExpiredValidation","Illustration","initialPost","post","router","id","query","initialData","postData","data","postMutate","mutate","userData","state","removePostDone","likePostDone","dislikePostDone","replace","draft","Likers","push","filter","v","status","User","nickname","caption","Images","src"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Router, { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\nimport useSWR from 'swr';\r\nimport { Col, Row } from 'antd';\r\n// @ts-ignore\r\nimport { useSelector } from 'react-redux';\r\nimport AppLayout from '@components/AppLayout';\r\nimport IllustCard from '@components/IllustCard';\r\nimport { fetcher } from '@utils/fetcher';\r\nimport produce from 'immer';\r\nimport UserProfile from '@components/UserProfile';\r\nimport CommentSection from '@components/CommentSection';\r\nimport { IPost } from '@typings/IPost';\r\nimport { IUser } from '@typings/IUser';\r\nimport ExpiredValidation from '@components/ExpiredValidation';\r\nimport wrapper from '../../store/configureStore';\r\n\r\ninterface Props {\r\n  post: IPost;\r\n}\r\n\r\nconst Illustration = ({ post: initialPost }: Props) => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  const { data: postData, mutate: postMutate } = useSWR<IPost>(`/api/post/${id}`, fetcher, {\r\n    initialData: initialPost,\r\n  });\r\n  const { data: userData } = useSWR<IUser>('/api/user', fetcher);\r\n\r\n  const { removePostDone, likePostDone, dislikePostDone } = useSelector((state: any) => state.post);\r\n\r\n  useEffect(() => {\r\n    if (removePostDone) {\r\n      Router.replace('/');\r\n    }\r\n  }, [removePostDone]);\r\n\r\n  useEffect(() => {\r\n    if (likePostDone) {\r\n      // postMutate(\r\n      //   {\r\n      //     ...postData,\r\n      //     Likers: [\r\n      //       ...postData.Likers,\r\n      //       {\r\n      //         id: userData?.id,\r\n      //       },\r\n      //     ],\r\n      //   },\r\n      //   false,\r\n      // );\r\n      postMutate(\r\n        produce((draft) => {\r\n          draft.Likers.push({ id: userData?.id });\r\n        }),\r\n        false,\r\n      );\r\n    }\r\n  }, [likePostDone]);\r\n\r\n  useEffect(() => {\r\n    if (dislikePostDone) {\r\n      // postMutate(\r\n      //   {\r\n      //     ...postData,\r\n      //     Likers: postData.Likers.filter((v: IUser) => v.id !== userData?.id),\r\n      //   },\r\n      //   false,\r\n      // );\r\n      postMutate(\r\n        produce((draft) => {\r\n          draft.Likers.filter((v: IUser) => v.id !== userData?.id);\r\n        }),\r\n      );\r\n    }\r\n  }, [dislikePostDone]);\r\n\r\n  if (userData?.status === 'pending') {\r\n    return <ExpiredValidation />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      {postData && (\r\n        <Head>\r\n          <title>{postData.User.nickname}님의 일러스트 - 유토피아</title>\r\n          <meta name=\"description\" content={postData.caption} />\r\n          <meta name=\"og:title\" content={`${postData.User.nickname}님의 일러스트`} />\r\n          <meta name=\"og:description\" content={postData.caption} />\r\n          <meta\r\n            name=\"og:image\"\r\n            content={postData.Images[0] ? postData.Images[0].src : 'https://nodebird.com/favicon.ico'}\r\n          />\r\n          <meta name=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n        </Head>\r\n      )}\r\n      {postData && (\r\n        <Row justify=\"center\" gutter={16}>\r\n          <Col span={12}>\r\n            <IllustCard postData={postData} />\r\n            <CommentSection postData={postData} postMutate={postMutate} />\r\n          </Col>\r\n          <Col span={4}>\r\n            <UserProfile postData={postData} />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  // const cookie = context.req ? context.req.headers.cookie : '';\r\n  // axios.defaults.headers.Cookie = '';\r\n  // if (context.req && cookie) {\r\n  //   axios.defaults.headers.Cookie = cookie;\r\n  // }\r\n\r\n  const post = await fetcher(`/api/post/${context.params?.id}`);\r\n  // const parsedCookie = post.headers['set-cookie'] ? parseCookies(post.headers['set-cookie'][0]) : '';\r\n  // const { data } = post;\r\n  // return { props: { post: data, cookie: parsedCookie && parsedCookie } };\r\n  return { props: { post } };\r\n});\r\n\r\nexport default Illustration;\r\n"]},"metadata":{},"sourceType":"module"}