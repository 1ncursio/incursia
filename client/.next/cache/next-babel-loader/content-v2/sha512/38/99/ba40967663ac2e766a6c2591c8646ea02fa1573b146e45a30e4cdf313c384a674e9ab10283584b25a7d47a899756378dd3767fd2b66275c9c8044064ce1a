{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\programming\\\\nodejs\\\\utopia\\\\client\\\\pages\\\\validation.tsx\";\nimport { Button, Input, Form, Modal } from 'antd';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useInput from '@hooks/useInput';\nimport { fetcherPatch } from '@utils/fetcher';\n\nconst validation = () => {\n  const router = useRouter();\n  const {\n    token\n  } = router.query;\n  const {\n    0: isValidated,\n    1: setIsValidated\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: visibleInput,\n    1: setVisibleInput\n  } = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  useEffect(() => {\n    fetcherPatch(token ? '/api/user/validation' : null, {\n      token\n    }).then(() => {\n      setIsValidated(true);\n      console.log('good');\n    }).catch(error => {\n      setIsValidated(false);\n      console.error(error);\n    });\n  }, [token]);\n  const onClickRequest = useCallback(() => {\n    setVisibleInput(true);\n  }, []);\n  const onFinish = useCallback(() => {\n    setIsLoading(true);\n    axios.post('/api/user/mail', {\n      email\n    }).then(() => {\n      Modal.success({\n        title: '이메일이 전송되었습니다',\n        content: '이메일이 전송되었습니다. 메일확인을 부탁드려요!',\n        okText: '확인'\n      });\n      setIsLoading(false);\n      router.replace('/');\n    }).catch(error => {\n      console.error(error);\n      Modal.error({\n        title: '🤔 메일주소를 확인해 주세요.',\n        content: '가입되지 않았거나 이미 인증이 완료된 계정입니다.',\n        okText: '확인'\n      });\n      setIsLoading(false);\n    });\n  }, [email]);\n\n  if (!isValidated) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC778\\uC99D\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uAC70\\uB098, \\uC720\\uD6A8\\uC2DC\\uAC04\\uC774 \\uC9C0\\uB0AC\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC778\\uC99D\\uC744 \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD558\\uB824\\uBA74, \\uC778\\uC99D\\uBA54\\uC77C\\uC744 \\uC694\\uCCAD\\uD574 \\uC8FC\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), visibleInput ? /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: onFinish,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          onChange: onChangeEmail,\n          value: email,\n          placeholder: \"\\uAC00\\uC785\\uB41C \\uC774\\uBA54\\uC77C\\uC744 \\uC815\\uD655\\uD788 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: isLoading,\n          children: \"\\uC778\\uC99D\\uBA54\\uC77C \\uBCF4\\uB0B4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: onClickRequest,\n        children: \"\\uC778\\uC99D\\uBA54\\uC77C \\uC694\\uCCAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC778\\uC99D\\uB428!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n};\n\nexport default validation;","map":{"version":3,"sources":["C:/programming/nodejs/utopia/client/pages/validation.tsx"],"names":["Button","Input","Form","Modal","axios","useRouter","React","useCallback","useEffect","useState","useInput","fetcherPatch","validation","router","token","query","isValidated","setIsValidated","isLoading","setIsLoading","visibleInput","setVisibleInput","email","onChangeEmail","then","console","log","catch","error","onClickRequest","onFinish","post","success","title","content","okText","replace"],"mappings":"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","sourcesContent":["import { Button, Input, Form, Modal } from 'antd';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport useInput from '@hooks/useInput';\r\nimport { fetcherPatch } from '@utils/fetcher';\r\n\r\nconst validation = () => {\r\n  const router = useRouter();\r\n  const { token } = router.query;\r\n  const [isValidated, setIsValidated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [visibleInput, setVisibleInput] = useState(false);\r\n  const [email, onChangeEmail] = useInput('');\r\n\r\n  useEffect(() => {\r\n    fetcherPatch(token ? '/api/user/validation' : null, { token })\r\n      .then(() => {\r\n        setIsValidated(true);\r\n        console.log('good');\r\n      })\r\n      .catch((error) => {\r\n        setIsValidated(false);\r\n        console.error(error);\r\n      });\r\n  }, [token]);\r\n\r\n  const onClickRequest = useCallback(() => {\r\n    setVisibleInput(true);\r\n  }, []);\r\n\r\n  const onFinish = useCallback(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .post('/api/user/mail', { email })\r\n      .then(() => {\r\n        Modal.success({\r\n          title: '이메일이 전송되었습니다',\r\n          content: '이메일이 전송되었습니다. 메일확인을 부탁드려요!',\r\n          okText: '확인',\r\n        });\r\n        setIsLoading(false);\r\n        router.replace('/');\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        Modal.error({\r\n          title: '🤔 메일주소를 확인해 주세요.',\r\n          content: '가입되지 않았거나 이미 인증이 완료된 계정입니다.',\r\n          okText: '확인',\r\n        });\r\n        setIsLoading(false);\r\n      });\r\n  }, [email]);\r\n\r\n  if (!isValidated) {\r\n    return (\r\n      <>\r\n        <div>인증이 완료되었거나, 유효시간이 지났습니다.</div>\r\n        <div>인증을 다시 시도하려면, 인증메일을 요청해 주세요!</div>\r\n        {visibleInput ? (\r\n          <Form onFinish={onFinish} layout=\"vertical\">\r\n            <Input\r\n              type=\"email\"\r\n              onChange={onChangeEmail}\r\n              value={email}\r\n              placeholder=\"가입된 이메일을 정확히 입력해 주세요.\"\r\n            />\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n              인증메일 보내기\r\n            </Button>\r\n          </Form>\r\n        ) : (\r\n          <Button type=\"primary\" onClick={onClickRequest}>\r\n            인증메일 요청\r\n          </Button>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <div>인증됨!</div>;\r\n};\r\n\r\nexport default validation;\r\n"]},"metadata":{},"sourceType":"module"}